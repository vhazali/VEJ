
NO_CATEGORY:
<android.app.ISearchManagerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setProcessLimit(int)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.location.LocationManager$LpComparator: int compare(int,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int prepareAddWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<android.backup.BackupManager: void dataChanged(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void closeSystemDialogs(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManagerClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)> (NO_CATEGORY)
<android.app.ISearchManager$Stub$Proxy: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle,android.app.ISearchManagerCallback,int)> (NO_CATEGORY)
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: java.lang.String debug(java.lang.String)> (NO_CATEGORY)
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean isWakeRelMovementTq(int,int,android.view.RawInputEvent)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryContentProviders(java.lang.String,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskToBack(int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void dataChanged(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(java.lang.String)> (NO_CATEGORY)
<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)> (NO_CATEGORY)
<android.location.LocationManager$LpComparator: int compare(float,float)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int selectAnimationLw(android.view.WindowManagerPolicy$WindowState,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState,int,int,boolean,int,int)> (NO_CATEGORY)
<android.media.AudioManager: void setStreamSolo(int,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener)> (NO_CATEGORY)
<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setComponentEnabledSetting(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.app.SearchManager: void onCancel(android.content.DialogInterface)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskToFront(int)> (NO_CATEGORY)
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)> (NO_CATEGORY)
<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$3: void onKeyguardExitResult(boolean)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean shutdown(int)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)> (NO_CATEGORY)
<android.app.ActivityManager$RunningTaskInfo: void readFromParcel(android.os.Parcel)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager: void restartPackage(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager: int staticGetMemoryClass()> (NO_CATEGORY)
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult createCacheFile(java.lang.String,int,android.net.http.Headers,java.lang.String,boolean)> (NO_CATEGORY)
<android.location.LocationManager: boolean installGeocodeProvider(android.location.IGeocodeProvider)> (NO_CATEGORY)
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)> (NO_CATEGORY)
<android.app.StatusBarManager: void removeIcon(android.os.IBinder)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$5: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)> (NO_CATEGORY)
<android.app.LocalActivityManager: void dispatchPause(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setEnabled(boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean isMovementKeyTi(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)> (NO_CATEGORY)
<android.app.ActivityManager$RunningTaskInfo: int describeContents()> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void agentDisconnected(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.backup.BackupManager: android.backup.IRestoreSession beginRestoreSession(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void layoutWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState)> (NO_CATEGORY)
<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager$ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void removeStartingWindow(android.os.IBinder,android.view.View)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)> (NO_CATEGORY)
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$7: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setFilterBitmap(boolean)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager$1: void onBindMethod(com.android.internal.view.InputBindResult)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)> (NO_CATEGORY)
<android.media.AudioManager: void setMode(int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int rotationForOrientationLw(int,int,boolean)> (NO_CATEGORY)
<android.location.LocationManager$ListenerTransport: void onProviderDisabled(java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager$RecentTaskInfo: void readFromParcel(android.os.Parcel)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean hasSystemFeature(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean isCheekPressedAgainstScreen(android.view.MotionEvent)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelNotificationWithTag(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<android.view.Window$LocalWindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (NO_CATEGORY)
<android.net.ConnectivityManager: boolean setRadios(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.policy.impl.KeyguardViewManager: void setNeedsInput(boolean)> (NO_CATEGORY)
<android.view.WindowManagerImpl: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityManager$1: void setEnabled(boolean)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.webkit.ViewManager: int access$000(android.webkit.ViewManager,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)> (NO_CATEGORY)
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransition(java.lang.String,int,int)> (NO_CATEGORY)
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)> (NO_CATEGORY)
<android.preference.PreferenceManager: void dispatchNewIntent(android.content.Intent)> (NO_CATEGORY)
<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (NO_CATEGORY)
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager$OnDismissListener)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)> (NO_CATEGORY)
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.view.Window$LocalWindowManager: void removeView(android.view.View)> (NO_CATEGORY)
<android.hardware.SensorManager$1: void onRotationChanged(int)> (NO_CATEGORY)
<android.app.ActivityManager$ProcessErrorStateInfo: int describeContents()> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: java.lang.String selectBackupTransport(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setCurrentOrientationLw(int)> (NO_CATEGORY)
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean injectKeyEvent(android.view.KeyEvent,boolean)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void startAppFreezingScreen(android.os.IBinder,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int access$008(android.net.wifi.WifiManager)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void removeClient(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void updateStatusIcon(android.os.IBinder,java.lang.String,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)> (NO_CATEGORY)
<android.hardware.SensorManager: void onRotationChanged(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)> (NO_CATEGORY)
<android.location.LocationManager$ListenerTransport: void onProviderEnabled(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean canBeForceHidden(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<android.os.PowerManager: void setBacklightBrightness(int)> (NO_CATEGORY)
<android.media.AudioManager: void setRouting(int,int,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener: void onOrientationChanged(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)> (NO_CATEGORY)
<android.media.AudioManager: void setWiredHeadsetOn(boolean)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)> (NO_CATEGORY)
<com.android.internal.policy.impl.KeyguardViewManager: boolean wakeWhenReadyTq(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unregisterActivityWatcher(android.app.IActivityWatcher)> (NO_CATEGORY)
<android.location.LocationManager$LpCapabilityComparator: int compare(android.location.LocationProvider,android.location.LocationProvider)> (NO_CATEGORY)
<android.view.Window$LocalWindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)> (NO_CATEGORY)
<android.app.AlarmManager: void setTimeZone(java.lang.String)> (NO_CATEGORY)
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean injectPointerEvent(android.view.MotionEvent,boolean)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)> (NO_CATEGORY)
<android.app.IWallpaperManagerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void clearPackagePreferredActivities(java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,boolean,boolean,int,boolean,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (NO_CATEGORY)
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)> (NO_CATEGORY)
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setRotation(int,boolean,int)> (NO_CATEGORY)
<android.text.ClipboardManager: void setText(java.lang.CharSequence)> (NO_CATEGORY)
<android.media.RingtoneManager: int inferStreamType()> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void installLocationProvider(java.lang.String,android.location.ILocationProvider)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void addClient(android.view.accessibility.IAccessibilityManagerClient)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean removeNetwork(int)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setDither(boolean)> (NO_CATEGORY)
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager$MulticastLock: void setReferenceCounted(boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void keyFeedbackFromInput(android.view.KeyEvent)> (NO_CATEGORY)
<android.webkit.ViewManager: int access$200(android.webkit.ViewManager,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int handleApplicationError(android.os.IBinder,int,java.lang.String,java.lang.String,java.lang.String,byte[])> (NO_CATEGORY)
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)> (NO_CATEGORY)
<android.media.AudioManager: void setRingerMode(int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int windowTypeToLayerLw(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)> android.permission.DISABLE_KEYGUARD (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void updatePlugged(android.content.Intent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setAutoBrightness(boolean)> (NO_CATEGORY)
<android.preference.PreferenceManager: void dispatchActivityResult(int,int,android.content.Intent)> (NO_CATEGORY)
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus$NmeaListener)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)> (NO_CATEGORY)
<android.webkit.ViewManager: int access$100(android.webkit.ViewManager,int)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setBackgroundDataSetting(boolean)> (NO_CATEGORY)
<android.app.LocalActivityManager: void dispatchDestroy(boolean)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelAllNotifications(java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager: boolean installLocationProvider(java.lang.String,android.location.ILocationProvider)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void updateRotation(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void removePermission(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager$RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)> (NO_CATEGORY)
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppWillBeHidden(android.os.IBinder)> (NO_CATEGORY)
<android.app.ISearchManager$Stub$Proxy: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.app.ISearchManagerCallback,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void userActivityWithForce(long,boolean,boolean)> (NO_CATEGORY)
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)> (NO_CATEGORY)
<android.app.WallpaperManager: void setResource(int)> (NO_CATEGORY)
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)> (NO_CATEGORY)
<android.app.WallpaperManager: void setStream(java.io.InputStream)> (NO_CATEGORY)
<android.app.IActivityManager$ContentProviderHolder: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$6: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethod(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void removePackageFromPreferred(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean killPidsForMemory(int[])> (NO_CATEGORY)
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isProtectedBroadcast(java.lang.String)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setBounds(android.graphics.Rect)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.location.LocationManager$LpCapabilityComparator: int compare(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)> (NO_CATEGORY)
<android.media.RingtoneManager: void setIncludeDrm(boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void locationCallbackFinished(android.location.ILocationListener)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(int,android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void pauseKeyDispatching(android.os.IBinder)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void registerActivityWatcher(android.app.IActivityWatcher)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppOrientation(android.view.IApplicationToken,int)> (NO_CATEGORY)
<android.location.LocationManager$GpsStatusListenerTransport: void onFirstFix(int)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean startViewServer(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)> (NO_CATEGORY)
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)> (NO_CATEGORY)
<android.media.AudioManager: void setParameters(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean setNumAllowedChannels(int,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean isWakeAbsMovementTq(int,int,android.view.RawInputEvent)> (NO_CATEGORY)
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean performDexOpt(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,boolean,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)> (NO_CATEGORY)
<android.location.LocationManager$LpAccuracyComparator: int compare(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)> (NO_CATEGORY)
<android.webkit.CookieManager: void setAcceptCookie(boolean)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHost(int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void removeWindowLw(android.view.WindowManagerPolicy$WindowState)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean setNumAllowedChannels(int,boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.SYSTEM_ALERT_WINDOW (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void addPackageToPreferred(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager$RecentTaskInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: int checkSignatures(int,int)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int access$010(android.net.wifi.WifiManager)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager$1: void setUsingInputMethod(boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<android.media.AudioManager: void setStreamVolume(int,int,int)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showMySoftInput(android.os.IBinder,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setPersistent(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.content.res.AssetManager$AssetInputStream: int read(byte[])> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)> (NO_CATEGORY)
<android.webkit.CacheManager$CacheResult: void setEncoding(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void onChange(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void restartPackage(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])> (NO_CATEGORY)
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)> (NO_CATEGORY)
<android.app.NotificationManager: void notify(int,android.app.Notification)> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: int describeContents()> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager$LpPowerComparator: int compare(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setInputMethodEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryInstrumentation(java.lang.String,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void hideMySoftInput(android.os.IBinder,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void removeContentProvider(android.app.IApplicationThread,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setScreenBrightnessOverride(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void addWindowToken(android.os.IBinder,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeUpdates(android.location.ILocationListener)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManager$MemoryInfo: int describeContents()> (NO_CATEGORY)
<android.hardware.SensorManager$ListenerDelegate: int addSensor(android.hardware.Sensor)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.media.AudioManager: void setBluetoothScoOn(boolean)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)> (NO_CATEGORY)
<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: int getAppOrientation(android.view.IApplicationToken)> (NO_CATEGORY)
<com.android.internal.policy.impl.ShortcutManager: void onChange(boolean)> (NO_CATEGORY)
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationEnabledSetting(java.lang.String,int,int)> (NO_CATEGORY)
<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (NO_CATEGORY)
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)> (NO_CATEGORY)
<android.location.LocationManager$LpAccuracyComparator: int compare(android.location.LocationProvider,android.location.LocationProvider)> (NO_CATEGORY)
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)> (NO_CATEGORY)
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)> (NO_CATEGORY)
<android.hardware.SensorManager$LegacyListener: void onSensorChanged(android.hardware.SensorEvent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean injectTrackballEvent(android.view.MotionEvent,boolean)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void installGeocodeProvider(android.location.IGeocodeProvider)> (NO_CATEGORY)
<android.app.SearchManager: void setDefaultWebSearch(android.content.ComponentName)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,boolean)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)> (NO_CATEGORY)
<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void removeWindowToken(android.os.IBinder)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void setBackupProvisioned(boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setEventDispatching(boolean)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean startScan(boolean)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void reportPss(android.app.IApplicationThread,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setAttachedWindowFrames(android.view.WindowManagerPolicy$WindowState,int,int,android.view.WindowManagerPolicy$WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setNetworkPreference(int)> (NO_CATEGORY)
<android.media.AudioManager: void setVibrateSetting(int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)> (NO_CATEGORY)
<android.app.ISearchManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyTq(android.view.RawInputEvent,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryPermissionsByGroup(java.lang.String,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<android.location.LocationManager$LpPowerComparator: int compare(android.location.LocationProvider,android.location.LocationProvider)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelToast(java.lang.String,android.app.ITransientNotification)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean hasKeys(int[],boolean[])> (NO_CATEGORY)
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppGroupId(android.os.IBinder,int)> (NO_CATEGORY)
<android.content.res.AssetManager: int access$200(android.content.res.AssetManager,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int subWindowTypeToLayerLw(int)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setBacklightBrightness(int)> (NO_CATEGORY)
<android.app.SearchManager: void setIdent(int,android.content.ComponentName)> (NO_CATEGORY)
<android.app.ActivityManager$RecentTaskInfo: int describeContents()> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppToken(int,android.os.IBinder)> (NO_CATEGORY)
<android.media.RingtoneManager: void setType(int)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)> (NO_CATEGORY)
<android.media.AudioManager: void setSpeakerphoneOn(boolean)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager$1: void onUnbindMethod(int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToTop(java.util.List)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean doesForceHide(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void removeAppToken(android.os.IBinder)> (NO_CATEGORY)
<android.webkit.CookieManager: void setCookie(android.net.WebAddress,java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: boolean preprocessInputEventTq(android.view.RawInputEvent)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void animatingWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<android.location.LocationManager: void removeTestProvider(java.lang.String)> (NO_CATEGORY)
<android.hardware.SensorManager$ListenerDelegate: int removeSensor(android.hardware.Sensor)> (NO_CATEGORY)
<android.preference.PreferenceManager: boolean setPreferences(android.preference.PreferenceScreen)> (NO_CATEGORY)
<android.app.NotificationManager: void cancel(java.lang.String,int)> (NO_CATEGORY)
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)> (NO_CATEGORY)
<android.app.ApplicationContext$ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)> (NO_CATEGORY)
<android.webkit.ViewManager$ChildView: void setBounds(int,int,int,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.os.LocalPowerManager)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppVisibility(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.view.Window$LocalWindowManager: void removeViewImmediate(android.view.View)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<android.app.ISearchManager$Stub$Proxy: void setDefaultWebSearch(android.content.ComponentName)> (NO_CATEGORY)
<android.webkit.CookieManager$CookieComparator: int compare(android.webkit.CookieManager$Cookie,android.webkit.CookieManager$Cookie)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<android.location.LocationManager$GpsStatusListenerTransport: void onNmeaReceived(long,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder,android.os.Bundle)> (NO_CATEGORY)
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)> (NO_CATEGORY)
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void goToSleep(long)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setBounds(int,int,int,int)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: void agentConnected(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelNotification(java.lang.String,int)> (NO_CATEGORY)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)> (NO_CATEGORY)
<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void killApplicationWithUid(java.lang.String,int)> (NO_CATEGORY)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)> (NO_CATEGORY)
<android.media.AudioManager: void setMicrophoneMute(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setFocusedApp(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])> (NO_CATEGORY)
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager$1: void setActive(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void userActivity(long,boolean)> (NO_CATEGORY)
<android.webkit.CookieManager$CookieComparator: int compare(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.content.res.AssetManager: int access$800(android.content.res.AssetManager,int,byte[],int,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> android.permission.ACCESS_FINE_LOCATION (NO_CATEGORY)
<android.net.wifi.WifiManager: int access$000(android.net.wifi.WifiManager)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void resumeKeyDispatching(android.os.IBinder)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setInTouchMode(boolean)> (NO_CATEGORY)
<android.app.StatusBarManager: void updateIcon(android.os.IBinder,java.lang.String,int,int)> (NO_CATEGORY)
<android.location.LocationManager: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.media.AudioManager: void setStreamMute(int,boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.location.LocationManager$GpsStatusListenerTransport: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)> (NO_CATEGORY)
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager$OnCancelListener)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)> (NO_CATEGORY)
<android.location.LocationManager$ListenerTransport: void onLocationChanged(android.location.Location)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)> (NO_CATEGORY)
<android.backup.IBackupManager$Stub$Proxy: android.backup.IRestoreSession beginRestoreSession(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToBottom(java.util.List)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)> (NO_CATEGORY)
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)> (NO_CATEGORY)
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)> (NO_CATEGORY)
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)> (NO_CATEGORY)
<android.webkit.CacheManager$CacheResult: void setInputStream(java.io.InputStream)> (NO_CATEGORY)
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<android.app.IActivityManager$ContentProviderHolder: int describeContents()> (NO_CATEGORY)
<android.net.ConnectivityManager: boolean setRadio(int,boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setPokeLock(int,android.os.IBinder,java.lang.String)> (NO_CATEGORY)

PHONE_CONNECTION:
<com.android.internal.telephony.PhoneProxy: void sendDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendUssdResponse(java.lang.String)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)> android.permission.WAKE_LOCK (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)> (PHONE_CONNECTION)

BLUETOOTH:
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)> (BLUETOOTH)
<android.bluetooth.BluetoothInputStream: int read(byte[],int,int)> (BLUETOOTH)
<android.bluetooth.BluetoothServerSocket: void setCloseHandler(android.os.Handler,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.BLUETOOTH (BLUETOOTH)
<android.bluetooth.BluetoothAdapter$RfcommChannelPicker: int nextChannel()> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)> (BLUETOOTH)
<android.bluetooth.BluetoothSocket: int write(byte[],int,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelBondProcess(java.lang.String)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(java.lang.String,byte[])> (BLUETOOTH)
<android.bluetooth.BluetoothHeadset$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> (BLUETOOTH)
<android.bluetooth.BluetoothHeadset$1: void onServiceDisconnected(android.content.ComponentName)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(java.lang.String,boolean)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(java.lang.String,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: void removeServiceRecord(int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)> (BLUETOOTH)
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)> (BLUETOOTH)
<android.bluetooth.ScoSocket: boolean connect(java.lang.String)> (BLUETOOTH)
<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPasskey(int)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelPairingUserInput(java.lang.String)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setTrust(java.lang.String,boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.BLUETOOTH_ADMIN (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.MODIFY_AUDIO_SETTINGS (BLUETOOTH)
<android.bluetooth.IBluetoothCallback$Stub$Proxy: void onRfcommChannelFound(int)> (BLUETOOTH)
<android.bluetooth.BluetoothSocket$SdpHelper: void onRfcommChannelFound(int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBond(java.lang.String)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WRITE_SETTINGS (BLUETOOTH)
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])> (BLUETOOTH)
<android.bluetooth.IBluetoothCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK (BLUETOOTH)
<android.bluetooth.BluetoothA2dp: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean removeBond(java.lang.String)> (BLUETOOTH)

ACCOUNT_SETTINGS:
<com.android.server.status.StatusBarService$ExpandedDialog: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void enableCameraFlash(int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setOnBattery(boolean,int)> (ACCOUNT_SETTINGS)
<android.text.style.BackgroundColorSpan: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setVisible(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView$MyWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow$PopupViewContainer: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.os.Messenger: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void registerForBroadcastsLocked(com.android.server.AppWidgetService$Provider,int[])> (ACCOUNT_SETTINGS)
<android.view.Window: void setDefaultWindowFormat(int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void mountMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setSpeakerphoneOn(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealFloatArraySize(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void remove(android.view.IWindow)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setDependency(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void set(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$3: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.Scroller: void startScroll(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void setAutoStartUms(boolean)> (ACCOUNT_SETTINGS)
<android.os.HandlerStateMachine: void setInitialState(android.os.HandlerState)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.FrameLoader: void setCacheMode(int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$1: void onError(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setFocusableInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)> (ACCOUNT_SETTINGS)
<com.android.server.status.AnimatedImageView: void setImageResource(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView$ExtendedZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$1000(com.android.internal.policy.impl.KeyguardUpdateMonitor,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit: void zygoteInit(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.webkit.Plugin: void setName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$800(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void access$1200(android.accounts.AccountManagerService,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.Selection: void selectAll(android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.text.style.MetricAffectingSpan$Passthrough: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void addRemoteDeviceProperties(java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)> (ACCOUNT_SETTINGS)
<android.view.View: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.view.Window: void setLayout(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$300(android.widget.RelativeLayout$LayoutParams)> (ACCOUNT_SETTINGS)
<android.webkit.FrameLoader: void setPostData(byte[])> (ACCOUNT_SETTINGS)
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)> (ACCOUNT_SETTINGS)
<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.location.IGeocodeProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ImageSwitcher: void setImageResource(int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(android.widget.RelativeLayout$DependencyGraph$Node)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.am.IntentBindRecord: void dumpInService(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)> (ACCOUNT_SETTINGS)
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$BondState: void attempt(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.KeyInputQueue: void setDisplay(android.view.Display)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewCore$EventHub: int access$2300(android.webkit.WebViewCore$EventHub)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void access$800(android.accounts.AccountManagerService,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothEventLoop$1: void handleMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)> (ACCOUNT_SETTINGS)
<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockPatternKeyguardView: void access$200(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ChangeWatcher: void afterTextChanged(android.text.Editable)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateString(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setContentDisposition(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$1: void setKeepScreenOn(boolean)> (ACCOUNT_SETTINGS)
<android.app.IStatusBar$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockAcquired(int)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)> (ACCOUNT_SETTINGS)
<android.graphics.RectF: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setEmbeddedTitleBar(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock$Parser: void setInput(java.io.InputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setCompatibilityScaling(float)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setReleaseWakeLockCallback(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMaxEms(int)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorToCursorAdaptor: boolean commitUpdates(java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.text.Annotation: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.database.SortCursor: boolean onMove(int,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstallObserver$Stub$Proxy: void packageInstalled(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setMargin(float,float)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setOnPreferenceChangeInternalListener(android.preference.Preference$OnPreferenceChangeInternalListener)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessStats$1: int compare(com.android.server.ProcessStats$Stats,com.android.server.ProcessStats$Stats)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.accounts.GrantCredentialsPermissionActivity: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl: void create(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)> (ACCOUNT_SETTINGS)
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void removeStatusChangeListener(android.content.ISyncStatusObserver)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setLinkSpeed(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleased(int)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)> (ACCOUNT_SETTINGS)
<com.android.server.am.AppErrorResult: void set(int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindAppWidgetId(int,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setView(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.os.PatternMatcher: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)> (ACCOUNT_SETTINGS)
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setEventType(int)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setPowerRequirement(int)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.graphics.Region: boolean set(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setSingleLine(boolean)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setScanMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView$DropDownItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: int compare(android.view.View,android.view.View)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void access$900(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)> (ACCOUNT_SETTINGS)
<android.location.Location: void set(android.location.Location)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setStartTime(long)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$5: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$1: void setFormat(int)> (ACCOUNT_SETTINGS)
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver,android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: android.view.View makeNotificationView(com.android.server.status.StatusBarNotification,android.view.ViewGroup)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)> (ACCOUNT_SETTINGS)
<android.preference.Preference: int compareTo(android.preference.Preference)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void bindAppWidgetId(int,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastMath: int round(float)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void scheduleFinalCleanup(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen$2: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ComponentName: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.GlobalActions: void onClick(android.content.DialogInterface,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.server.ConnectivityService: boolean setRadios(boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IEventListener$Stub$Proxy: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection)> (ACCOUNT_SETTINGS)
<android.view.WindowOrientationListener$SensorEventListenerImpl: void onSensorChanged(android.hardware.SensorEvent)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void setPlayNotificationSounds(boolean)> (ACCOUNT_SETTINGS)
<android.util.SparseArray: void append(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setSkew(float,float)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector$GroupMetadata: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.Scroller: void setFinalY(int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void setMassStorageEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.server.Watchdog: void reportPss(com.android.server.Watchdog$PssRequestor,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)> (ACCOUNT_SETTINGS)
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setScanOnlyMode(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerResponse: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,float)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int convertValueToUnsignedInt(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setPersistent(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setHasMonetaryCost(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void stopListening(int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$1200(com.android.internal.policy.impl.KeyguardUpdateMonitor,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setResultData(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)> (ACCOUNT_SETTINGS)
<android.webkit.WebView$InvokeListBox$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setDelay(float)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3800(android.media.AudioService)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setScanMode(int,int)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: void setZoomSpeed(long)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setRequiresNetwork(boolean)> (ACCOUNT_SETTINGS)
<android.location.Address: void setUrl(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.Account: boolean equals(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector: int findGroupPosition(long,int)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker: void setNextPoolable(android.view.VelocityTracker)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void closeSystemDialogs(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.MathUtils: int constrain(int,int,int)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: int valueAt(int)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: void acquireMulticastLock(android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedRotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.location.Address: void setCountryName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateDouble(int,double)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setTextKeepState(java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.View: void setDrawingCacheBackgroundColor(int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$MyWindow: void dispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$SimWatcher: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.location.Address: void setSubLocality(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void updateNetworkState(int,android.net.NetworkInfo)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioSystem: int setRouting(int,int,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$BaseFutureTask$Response: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.status.FixedSizeDrawable: void setBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setVibrateSetting(int,int)> (ACCOUNT_SETTINGS)
<android.text.method.LinkMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)> (ACCOUNT_SETTINGS)
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout: void setIgnoreGravity(int)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: int indexOfKey(int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.os.Debug$MemoryInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)> (ACCOUNT_SETTINGS)
<android.content.res.CompatibilityInfo: void updateCompatibleScreenFrame(android.util.DisplayMetrics,int,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)> (ACCOUNT_SETTINGS)
<android.location.Location: void setProvider(java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSelectAllOnFocus(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)> (ACCOUNT_SETTINGS)
<android.media.AudioSystem: void setErrorCallback(android.media.AudioSystem$ErrorCallback)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TypefaceSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.os.FileObserver$ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.RecentApplicationsDialog$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.MemoryFile: int access$200(android.os.MemoryFile)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setPersistentDrawingCache(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkCallingPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.AccountUnlockScreen: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext$MockAccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onRefreshBatteryInfo(boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void deleteHost(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: boolean shouldVibrate(int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setDividerHeight(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: void updateLocation(android.location.Location)> (ACCOUNT_SETTINGS)
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.view.View: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node$1: void onReleased(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.view.Window: void setType(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setIndeterminate(boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int access$500(android.server.BluetoothService)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.Selection: void setSelection(android.text.Spannable,int,int)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setPowerRequirement(int)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateShort(int,short)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$2900(int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerResponse: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.server.am.HistoryRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow$PopupViewContainer: void sendAccessibilityEvent(int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.view.Window: void setContainer(android.view.Window)> (ACCOUNT_SETTINGS)
<com.android.server.Watchdog: void processStarted(com.android.server.Watchdog$PssRequestor,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.ICheckinService$Stub$Proxy: void reportCrashSync(byte[])> (ACCOUNT_SETTINGS)
<android.view.IOnKeyguardExitResult$Stub$Proxy: void onKeyguardExitResult(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: void setPriority(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setResult(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.server.status.IconData: com.android.server.status.IconData makeText(java.lang.String,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: float complexToFraction(int,float,float)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)> (ACCOUNT_SETTINGS)
<android.os.Debug: void setFieldsOn(java.lang.Class)> (ACCOUNT_SETTINGS)
<android.view.View: void setTag(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.media.AudioService: boolean shouldVibrate(int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void dispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.os.UEventObserver: int access$100(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.os.SamplingProfilerIntegration: void access$000(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView$MenuHandler: boolean onMenuItemClick(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<com.android.server.status.FixedSizeDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManagerResponse$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setScanResultsList(java.util.List)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)> (ACCOUNT_SETTINGS)
<android.view.WindowOrientationListener$SensorEventListenerImpl: void onAccuracyChanged(android.hardware.Sensor,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: android.app.Activity startActivityNow(android.app.Activity,java.lang.String,android.content.Intent,android.content.pm.ActivityInfo,android.os.IBinder,android.os.Bundle,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.PixelFormat: boolean formatHasAlpha(int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.location.Address: void setPostalCode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setInverseBackgroundForced(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Intent: boolean hasCategory(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setFillAfter(boolean)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setCursorCapsMode(int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void showDialog(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setRssi(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setLocality(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.CharacterStyle$Passthrough: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setNumColumns(int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void setState(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> (ACCOUNT_SETTINGS)
<android.location.Address: int access$102(android.location.Address,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: int enqueuePendingEvent(java.lang.Object,boolean)> (ACCOUNT_SETTINGS)
<android.view.MotionEvent: int findPointerIndex(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper: boolean bind(java.lang.String,android.accounts.AuthenticatorBindHelper$Callback)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.PatternMatcher: boolean match(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setCacheMode(int)> (ACCOUNT_SETTINGS)
<android.app.Service: boolean onUnbind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.content.ActiveSyncInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: void startTiming(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setSelectedGroup(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: boolean stopService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void adjustVolume(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)> (ACCOUNT_SETTINGS)
<android.net.Uri: int compareTo(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.Path: void setFillType(android.graphics.Path$FillType)> (ACCOUNT_SETTINGS)
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.text.style.AbsoluteSizeSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.content.ISyncContext$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setDiscoverableTimeout(int)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessStats: void onLoadChanged(float,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.util.LongSparseArray: int indexOfKey(long)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.net.DhcpInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$UninstallReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$1500(android.media.AudioService,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController$1: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setSummary(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundResource(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebHistoryItem: void setTouchIconUrl(java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateLong(int,long)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node$1: void onReleased(android.widget.RelativeLayout$DependencyGraph$Node)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.os.Process: int start(java.lang.String,java.lang.String,int,int,int[],int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)> (ACCOUNT_SETTINGS)
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: int access$500(com.android.server.HardwareService)> (ACCOUNT_SETTINGS)
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setDescendantFocusability(int)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.content.res.CompatibilityInfo: void setLargeScreens(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService$Vibration: int access$1200(com.android.server.HardwareService$Vibration)> (ACCOUNT_SETTINGS)
<com.android.server.am.AppBindRecord: void dumpInIntentBind(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.KeyInputQueue: int access$300(int,boolean,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void loadUrl(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: int access$512(android.database.sqlite.SQLiteCursor,int)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setContentType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.net.Uri$OpaqueUri: int describeContents()> (ACCOUNT_SETTINGS)
<android.os.Parcel: void writeStringArray(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: int access$076(android.view.KeyEvent,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setResult(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onKeyboardChange(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit: void main(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: int access$000(android.content.ContentProvider)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void sendAccessibilityEvent(int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)> (ACCOUNT_SETTINGS)
<android.content.UriMatcher: int match(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setTactileFeedbackEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int green(int)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int rgb(int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.res.ColorStateList: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setFilters(android.text.InputFilter[])> (ACCOUNT_SETTINGS)
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)> (ACCOUNT_SETTINGS)
<com.android.server.status.TrackingView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$4: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.text.style.QuoteSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setDefaultValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setPixel(int,int,int)> (ACCOUNT_SETTINGS)
<android.view.MotionEvent: void setAction(int)> (ACCOUNT_SETTINGS)
<android.util.SparseArray: int indexOfKey(int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setOrientation(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: void setZoomSpeed(long)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSBtoColor(float,float,float)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateInt(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController$AlertParams: void apply(com.android.internal.app.AlertController)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.Intent: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setClipChildren(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$BondState: boolean isAutoPairingBlacklisted(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: void append(int,int)> (ACCOUNT_SETTINGS)
<com.android.server.am.ProcessRecord: void setPid(int)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setDesiredSize(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.view.View: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateToNull(int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void setNotificationCallbacks(com.android.server.status.StatusBarService$NotificationCallbacks)> (ACCOUNT_SETTINGS)
<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void setFixedSize(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setLightColor_UNCHECKED(int,int)> (ACCOUNT_SETTINGS)
<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMaxLines(int)> (ACCOUNT_SETTINGS)
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusListener$Stub$Proxy: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)> (ACCOUNT_SETTINGS)
<android.app.ITransientNotification$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)> (ACCOUNT_SETTINGS)
<android.widget.ResourceCursorAdapter: void setViewResource(int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)> (ACCOUNT_SETTINGS)
<android.location.ILocationListener$Stub$Proxy: void onProviderEnabled(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: void setSubMenu(com.android.internal.view.menu.SubMenuBuilder)> (ACCOUNT_SETTINGS)
<android.content.IEntityIterator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void removeIcon(android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService$LockList: int access$1300(com.android.server.WifiService$LockList)> (ACCOUNT_SETTINGS)
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void attachEngine(android.service.wallpaper.IWallpaperEngine)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastDisabled(int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setSecondaryProgress(int)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)> (ACCOUNT_SETTINGS)
<android.webkit.LoadListener: void status(int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: int lookForSelectablePosition(int,boolean)> (ACCOUNT_SETTINGS)
<android.content.IntentSender$FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewResource(int,int)> (ACCOUNT_SETTINGS)
<com.android.server.ConnectivityService: boolean requestRouteToHost(int,int)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read()> (ACCOUNT_SETTINGS)
<android.graphics.Color: int red(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$802(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onUnbindMethod(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void dispatchAppVisibility(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen$1: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void sendEnableIntentLocked(com.android.server.AppWidgetService$Provider)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setRotate(float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: boolean setState(int[])> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)> (ACCOUNT_SETTINGS)
<android.text.TextPaint: void set(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setAdjustViewBounds(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setContentLength(long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelock(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setUseDoubleTree(boolean)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean cancelBondProcess(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.FrameLayout: void setForegroundGravity(int)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,boolean,boolean,float,android.text.TextUtils$TruncateAt)> (ACCOUNT_SETTINGS)
<android.text.format.Time: void set(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: void setPattern(com.android.internal.widget.LockPatternView$DisplayMode,java.util.List)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQuery: void bindNull(int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<android.provider.Checkin: android.net.Uri logEvent(android.content.ContentResolver,android.provider.Checkin$Events$Tag,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.KeyInputQueue: int access$500(com.android.server.KeyInputQueue,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.ExtractedTextRequest: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartGps(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: void addListener(int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void dispatchAppVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector: void setMaxExpGroupCount(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,double)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setItemsCanFocus(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onPanelClosed(int,android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setFlashlightEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$502(android.media.AudioService$VolumeStreamState,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void access$1100(android.accounts.AccountManagerService)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void setNotificationIconVisibility(boolean,int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: int describeContents()> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableResource(int,int)> (ACCOUNT_SETTINGS)
<android.database.ContentObservable: void notifyChange(boolean)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.location.Location: double convert(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.os.ICheckinService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$1100(android.webkit.WebView)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$500(android.media.AudioService$VolumeStreamState)> (ACCOUNT_SETTINGS)
<android.view.Window: void setWindowAnimations(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setNodePointer(int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.ExtractedText: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo$1: void onAcquired(android.view.View$AttachInfo$InvalidateInfo)> (ACCOUNT_SETTINGS)
<android.app.ActivityGroup: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)> (ACCOUNT_SETTINGS)
<android.text.PackedObjectVector: void deleteAt(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> (ACCOUNT_SETTINGS)
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setDismissMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMaxWidth(int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelock(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView$OutlineDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.location.GpsSatellite: void setStatus(android.location.GpsSatellite)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$Launcher: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: int access$502(android.database.sqlite.SQLiteCursor,int)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$TrackballAxis: int generate(float)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int contentToViewDimension(int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setFeatureName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$MyWindow: void dispatchAppVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.FileObserver$ObserverThread: void onEvent(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgress(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.database.SortCursor: int access$002(com.android.internal.database.SortCursor,int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setThreshold(int)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setTranslate(float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void vibrate(long,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setLongitude(double)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onOrientationChange(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void grantUriPermission(java.lang.String,android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setEms(int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$300(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<com.android.server.am.HistoryRecord: void addNewIntentLocked(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug$HierarchyTraceType)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void unmountMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$BondState: void access$1800(android.server.BluetoothService$BondState,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void appPrivateCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.os.TokenWatcher: int access$102(android.os.TokenWatcher,int)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceScreen$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onScaleChanged(float,float)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void access$000(android.view.SurfaceView,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputConnectionWrapper: void deleteSurroundingText(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.IconData: com.android.server.status.IconData makeIcon(java.lang.String,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: boolean isFilenameSafe(java.io.File)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setText(java.lang.CharSequence,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void onCloseSystemDialogs(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Debug: int setAllocationLimit(int)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setDensity(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void performEditorAction(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Counter: void writeCounterToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Counter)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)> (ACCOUNT_SETTINGS)
<android.view.View: void setNextFocusRightId(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setCacheColorHint(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOff(int)> (ACCOUNT_SETTINGS)
<android.net.http.HttpAuthHeader: void setPassword(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onBindMethod(com.android.internal.view.InputBindResult)> (ACCOUNT_SETTINGS)
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setUpdateVersion(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void smoothScrollBy(int,int)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.content.ISyncStatusObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.Handler$MessengerImpl: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<android.view.View: void setIsRootNamespace(boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3600(android.media.AudioService)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: void enableLocationTracking(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)> (ACCOUNT_SETTINGS)
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateToNull(int)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void set(android.view.animation.Transformation)> (ACCOUNT_SETTINGS)
<android.view.View: void setVerticalScrollBarEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setLastModified(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ShutdownThread$3: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: int describeContents()> (ACCOUNT_SETTINGS)
<android.provider.Settings$Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$600(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.ContextThemeWrapper: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setCountryCode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: void setDisplayMode(com.android.internal.widget.LockPatternView$DisplayMode)> (ACCOUNT_SETTINGS)
<android.location.Location: void setExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView$2: void onNothingSelected(android.widget.AdapterView)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$1000(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.webkit.FrameLoader: void setReferrer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.Selection: void setSelection(android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onDialTrigger(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: void setTactileFeedbackEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen: void onOrientationChange(boolean)> (ACCOUNT_SETTINGS)
<android.location.GpsStatus: void setStatus(int,int[],float[],float[],float[],int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: void onSimStateChanged(com.android.internal.telephony.IccCard$State)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void setActivityToken(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.graphics.Color: int alpha(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)> (ACCOUNT_SETTINGS)
<android.net.http.RequestQueue$ActivePool: int access$308(android.net.http.RequestQueue$ActivePool)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateBlob(int,byte[])> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$400(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$412(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setInPassword(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setSummary(int)> (ACCOUNT_SETTINGS)
<android.view.Surface: void setCompatibleDisplayMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo$Translator)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorDescription: int hashCode()> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.AccountUnlockScreen: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$Session: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: void setFadingEdgeLength(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputConnectionWrapper: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.database.CursorWindow: void setStartPosition(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.RotarySelector: void setOnDialTriggerListener(com.android.internal.widget.RotarySelector$OnDialTriggerListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.TransitionDrawable: void startTransition(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$1000(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)> (ACCOUNT_SETTINGS)
<android.widget.Scroller: void setFinalX(int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setOrder(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void recordCurrentLevel(int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetService$AppWidgetId,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownDismissedOnCompletion(boolean)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.os.Message: void setTarget(android.os.Handler)> (ACCOUNT_SETTINGS)
<android.text.style.StrikethroughSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.accounts.Account: int describeContents()> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.app.Activity: void setVisible(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusProvider$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void vibrate(long,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: int access$400(android.database.sqlite.SQLiteCursor)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setAnimationStyle(int)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessMap: void remove(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: void removeExtra(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,android.content.res.Configuration,java.util.Map)> (ACCOUNT_SETTINGS)
<android.view.Window: void setFlags(int,int)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[])> (ACCOUNT_SETTINGS)
<android.app.IServiceConnection$Stub$Proxy: void connected(android.content.ComponentName,android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.server.MountListener: void ejectMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String readAuthTokenFromDatabase(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.animation.GridLayoutAnimationController: void setDirection(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.util.StateSet: boolean stateSetMatches(int[],int[])> (ACCOUNT_SETTINGS)
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)> (ACCOUNT_SETTINGS)
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDefaultFontSize(int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setRepeatMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiOn(int)> (ACCOUNT_SETTINGS)
<android.content.ISyncContext$Stub$Proxy: void onFinished(android.content.SyncResult)> (ACCOUNT_SETTINGS)
<android.location.Criteria: int access$002(android.location.Criteria,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void addMessageToConsole(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$500(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void removeFilterInternal(android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.widget.CursorAdapter$ChangeObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.util.Xml: android.util.Xml$Encoding findEncodingByName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$Session: void onConnected(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.View: void setTagInternal(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)> (ACCOUNT_SETTINGS)
<android.app.Notification: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean access$1400(com.android.server.WifiService,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteAppWidgetId(int)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setCacheControl(java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusListener$Stub$Proxy: void onFirstFix(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setZoomSpeed(long)> (ACCOUNT_SETTINGS)
<android.backup.BackupDataOutput: int writeEntityData(byte[],int)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(android.view.View$AttachInfo$InvalidateInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int convertValueToList(java.lang.CharSequence,java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setHeaderDividersEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setDuration(long)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: int measureNullChild(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setFillBefore(boolean)> (ACCOUNT_SETTINGS)
<android.app.IStatusBar$Stub$Proxy: android.os.IBinder addIcon(java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.os.SystemProperties: void set(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node$1: void onAcquired(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void updateNotificationView(com.android.server.status.StatusBarNotification,com.android.server.status.NotificationData)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])> (ACCOUNT_SETTINGS)
<android.os.Registrant: void notifyResult(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.webkit.BrowserFrame: void addJavascriptInterface(java.lang.Object,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$402(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setDefaultDensity(int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.EditableInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$1: void onFocusChange(android.view.View,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)> (ACCOUNT_SETTINGS)
<android.os.Debug: int setGlobalAllocationLimit(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setContentEncoding(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void formatMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean post(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.view.View: void restoreHierarchyState(android.util.SparseArray)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateShort(int,short)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen$4: void onTick(long)> (ACCOUNT_SETTINGS)
<android.net.wifi.ScanResult: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)> (ACCOUNT_SETTINGS)
<android.util.SparseBooleanArray: int indexOfValue(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setHorizontalSpacing(int)> (ACCOUNT_SETTINGS)
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: int access$300(android.database.sqlite.SQLiteCursor)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setLocation(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setCancelable(boolean)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)> (ACCOUNT_SETTINGS)
<android.util.LongSparseArray: void append(long,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.server.status.FixedSizeDrawable: void setFixedBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusProvider$Stub$Proxy: void addGpsStatusListener(android.location.IGpsStatusListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageResource(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.net.Uri$OpaqueUri: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopSensor(int,int)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.text.format.Time: void set(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean update(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.os.Looper: void setMessageLogging(android.util.Printer)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void handleMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setStreamSolo(int,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.os.SystemService: void start(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.http.DomainNameChecker: boolean match(java.security.cert.X509Certificate,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void closeSystemDialogs(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setCustomTitle(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onContextMenuClosed(android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: boolean interceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void dispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealByteArraySize(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.test.mock.MockContentResolver: boolean releaseProvider(android.content.IContentProvider)> (ACCOUNT_SETTINGS)
<com.android.server.MountService: void updateUsbMassStorageNotification(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void setSelectedGroup(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void removeListener(int)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setInputType(int)> (ACCOUNT_SETTINGS)
<android.os.UEventObserver: void startObserving(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void updateIcon(android.os.IBinder,java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void commitText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealIntArraySize(int)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$BondState: void setBondState(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientType(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1000(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiConfiguration$1: android.net.wifi.WifiConfiguration createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow$PopupViewContainer: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setScale(float,float)> (ACCOUNT_SETTINGS)
<android.net.http.RequestHandle: java.lang.String authorizationHeader(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.BulletSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.style.LeadingMarginSpan$Standard: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.pm.PermissionGroupInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen$UnlockPatternListener: void onPatternDetected(java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setHeight(int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void dispatchKey(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastEnabled(int)> (ACCOUNT_SETTINGS)
<android.location.GpsStatus: void setTimeToFirstFix(int)> (ACCOUNT_SETTINGS)
<android.hardware.Sensor: void setRange(float,float)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableResource(int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.database.SortCursor: int access$102(com.android.internal.database.SortCursor,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onTextContextMenuItem(int)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onNewIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSize(int,float)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void setLocation(android.location.Location)> (ACCOUNT_SETTINGS)
<android.text.style.RelativeSizeSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector: void setExpandableListAdapter(android.widget.ExpandableListAdapter)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkCallingOrSelfPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setSoftInputMode(int)> (ACCOUNT_SETTINGS)
<android.os.Process: int start(java.lang.String,int,int,int[],int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int findAll(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean performItemClick(android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar)> (ACCOUNT_SETTINGS)
<android.net.Uri: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMarqueeRepeatLimit(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFastScrollEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void updateLocation(android.location.Location)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void wallpaperOffsetsComplete(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.IServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)> (ACCOUNT_SETTINGS)
<android.location.Address: void setPhone(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$MyWindow: void dispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)> (ACCOUNT_SETTINGS)
<android.util.MathUtils: int random(int)> (ACCOUNT_SETTINGS)
<android.location.ILocationListener$Stub$Proxy: void onStatusChanged(java.lang.String,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setRect(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.Address: void setSubThoroughfare(java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void access$300(android.accounts.AccountManagerService,android.accounts.Account,java.lang.CharSequence,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.ActivityInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setCancelMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.view.Window: void setBackgroundDrawableResource(int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setItemChecked(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.IBackupAgent$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setIndeterminate(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)> (ACCOUNT_SETTINGS)
<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper$MyServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)> (ACCOUNT_SETTINGS)
<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.text.Layout$SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int)> (ACCOUNT_SETTINGS)
<android.server.data.ThrowableData: void write(java.io.DataOutput)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: int access$902(com.android.internal.app.AlertController,int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1600(int)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$400(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BinderInternal: void forceGc(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.webkit.WebBackForwardList: void setCurrentIndex(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ShutdownThread$1: void onClick(android.content.DialogInterface,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setWillNotDraw(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],android.database.sqlite.SQLiteDatabase$ConflictAlgorithm)> (ACCOUNT_SETTINGS)
<android.text.Styled: int getTextWidths(android.text.TextPaint,android.text.TextPaint,android.text.Spanned,int,int,float[],android.graphics.Paint$FontMetricsInt)> (ACCOUNT_SETTINGS)
<android.content.ContentService: void setMasterSyncAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void cancelVibrate(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.Service: void onRebind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setStreamMute(int,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$102(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void performContextMenuAction(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSupportZoom(boolean)> (ACCOUNT_SETTINGS)
<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.net.MobileDataStateTracker$MobileDataStateReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> android.permission.USE_CREDENTIALS (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.HandlerStateMachine: void sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask$Response: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.IThumbnailReceiver$Stub$Proxy: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)> (ACCOUNT_SETTINGS)
<android.app.IActivityWatcher$Stub$Proxy: void activityResuming(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)> (ACCOUNT_SETTINGS)
<android.app.Service: void stopForeground(boolean)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendKeyDownUpSync(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.view.View$ScrollabilityCache: void setFadeColor(int)> (ACCOUNT_SETTINGS)
<android.net.http.HttpAuthHeader: void setUsername(java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.Address: void setPremises(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock$Parser: void setFeature(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentQueryMap$1: void onChange(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.HashMap readMapXml(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper$MyServiceConnection: void onServiceDisconnected(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setAccuracy(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewBase: void setCallback(com.android.internal.policy.impl.KeyguardViewCallback)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.view.IRotationWatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,android.database.sqlite.SQLiteDatabase$ConflictAlgorithm)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void performPrivateCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setAdapterCustom(android.webkit.WebTextView$AutoCompleteAdapter)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void onGroupExpand(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void deleteHostLocked(com.android.server.AppWidgetService$Host)> (ACCOUNT_SETTINGS)
<android.content.pm.FeatureInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void onSizeChanged(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void setAutoStartUms(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Scroller: void startScroll(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setDisplayedChild(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setAutoLinkMask(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1400(int,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)> (ACCOUNT_SETTINGS)
<android.view.View: void dispatchWindowVisibilityChanged(int)> (ACCOUNT_SETTINGS)
<android.location.Location: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: int access$802(com.android.internal.policy.impl.UnlockScreen,int)> (ACCOUNT_SETTINGS)
<android.os.Looper: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setScrollBarStyle(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.res.Resources$Theme: void dump(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setVolumeControlStream(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int findItemIndex(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchSetSelected(boolean)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$702(android.media.AudioService$VolumeStreamState,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setInitialStickyHint(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Path: void setLastPoint(float,float)> (ACCOUNT_SETTINGS)
<android.util.StateSet: java.lang.String dump(int[])> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void onCreate(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$DatabaseHelper: void onOpen(android.database.sqlite.SQLiteDatabase)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setInputMethodMode(int)> (ACCOUNT_SETTINGS)
<com.android.server.status.IconMerger: int access$000(com.android.server.status.IconMerger)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$002(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$300(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onTooManyRedirects(android.os.Message,android.os.Message)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)> (ACCOUNT_SETTINGS)
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(int)> (ACCOUNT_SETTINGS)
<android.os.RegistrantList: void notifyResult(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.am.HistoryRecord: void addResultLocked(com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int parseColor(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setDrawingCacheQuality(int)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo$1: void onAcquired(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.style.ForegroundColorSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void playSoundEffect(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$RecycleBin: void setViewTypeCount(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setMinimumWidth(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)> (ACCOUNT_SETTINGS)
<com.android.internal.util.TypedProperties: void load(java.io.Reader)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.Region: boolean set(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLinksClickable(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setBluetoothScoOn(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: int access$000(com.android.internal.policy.impl.KeyguardViewMediator)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean updateRemoteDevicePropertiesCache(java.lang.String)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void onGroupCollapse(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float)> (ACCOUNT_SETTINGS)
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setLightOff_UNCHECKED(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock$Parser: void setProperty(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1500(int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean removeCallbacks(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar$RefreshProgressRunnable: void setup(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$602(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.content.Context createPackageContext(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: java.io.FileInputStream openFileInput(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.location.LocationProviderProxy: void setMinTime(long)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setExpires(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setDuration(int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$1: void setFixedSize(int,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.pm.RegisteredServicesCache: void setListener(android.content.pm.RegisteredServicesCacheListener)> (ACCOUNT_SETTINGS)
<android.media.SoundPool: int load(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void initializeInvalidateRegion(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<android.widget.ListView: int measureHeightOfChildren(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setRequiresCell(boolean)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)> (ACCOUNT_SETTINGS)
<android.widget.TextView$CharWrapper: void set(char[],int,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext$SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor remove(java.lang.String)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$RemoteService: boolean equals(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider$1: void removeGpsStatusListener(android.location.IGpsStatusListener)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageStats: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setRawInputType(int)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setBearingRequired(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setSelectedPositionInt(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHint(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.SyncStorageEngine: boolean deleteFromPending(android.content.SyncStorageEngine$PendingOperation)> (ACCOUNT_SETTINGS)
<android.server.BluetoothA2dpService: boolean disconnectSink(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.location.Address$1: android.location.Address createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: android.content.Intent access$100(android.accounts.AccountManagerService,android.accounts.Account,int,android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextColor(int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.util.CharSequences: boolean equals(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<android.database.CursorWindow: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopGps(int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.media.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setFreezesText(boolean)> (ACCOUNT_SETTINGS)
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceGroupAdapter: void onPreferenceChange(android.preference.Preference)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker$1: void onReleased(android.view.VelocityTracker)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$1: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$200(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void performAddUpdateIcon(android.os.IBinder,com.android.server.status.IconData,com.android.server.status.NotificationData)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiConfiguration: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean sendToTextFilter(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: void delete(int)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])> (ACCOUNT_SETTINGS)
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.os.IPermissionController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int contentToViewX(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setNetworkId(int)> (ACCOUNT_SETTINGS)
<android.location.ILocationListener$Stub$Proxy: void onLocationChanged(android.location.Location)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$008(android.content.res.XmlBlock)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onSimStateChanged(com.android.internal.telephony.IccCard$State)> (ACCOUNT_SETTINGS)
<android.os.IParentalControlCallback$Stub$Proxy: void onResult(com.google.android.net.ParentalControlState)> (ACCOUNT_SETTINGS)
<android.text.style.MetricAffectingSpan$Passthrough: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$1000(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.view.View: void setFlags(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView$Validator)> (ACCOUNT_SETTINGS)
<android.text.util.Regex: java.lang.String concatGroups(java.util.regex.Matcher)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void setWebChromeClient(android.webkit.WebChromeClient)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setSelectionFromWebKit(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageStatsObserver$Stub$Proxy: void onGetStatsCompleted(android.content.pm.PackageStats,boolean)> (ACCOUNT_SETTINGS)
<android.provider.Settings$Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Counter: void logState(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController$OnZoomListener)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor$SelfContentObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1100(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker: void setNextPoolable(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorProxy: boolean updateRows(java.util.Map)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setData(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean createBond(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker$DhcpHandler: void setCancelCallback(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setAction(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setId(int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.server.BluetoothA2dpService: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void removeServiceRecord(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.location.Address: void setLatitude(double)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorCache: android.accounts.AuthenticatorDescription parseServiceAttributes(java.lang.String,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.graphics.Rect: void set(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: boolean addToBlacklist(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.os.ResultReceiver: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean removeFooterView(android.view.View)> (ACCOUNT_SETTINGS)
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController$3: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLines(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> (ACCOUNT_SETTINGS)
<android.net.Uri: java.lang.String decode(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: java.lang.String patternToString(java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean setNumAllowedChannels(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.server.am.ReceiverList: void dumpLocal(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ApplicationInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setSelection(int)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void cancelVibrate(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController$Container: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: boolean deleteFile(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)> android.permission.BROADCAST_STICKY (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.FrameLoader: void setContentTypeForPost(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: void layout(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewDatabase: void setFormData(java.lang.String,java.util.HashMap)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessStats: int onMeasureProcessName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setStartOffset(long)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setPairingConfirmation(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewDatabase: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreObserver$Stub$Proxy: void onUpdate(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)> (ACCOUNT_SETTINGS)
<android.location.Criteria: int access$102(android.location.Criteria,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setTextColor(int,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$900(int,int)> (ACCOUNT_SETTINGS)
<android.security.Md5MessageDigest: byte[] digest(byte[])> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<com.android.server.am.HistoryRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteHost(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int bluezStringToScanMode(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker$NotificationEnabledSettingObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void setWebViewClient(android.webkit.WebViewClient)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void grantAppPermission(android.accounts.Account,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.IMessenger$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$2: void onAnimationRepeat(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContextCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$1500(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setStretchMode(int)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setSecondaryProgress(int)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setGravity(int,int,int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver$1: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.hardware.Sensor: void setLegacyType(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setClickable(boolean)> (ACCOUNT_SETTINGS)
<android.os.ICheckinService$Stub$Proxy: void reportCrashAsync(byte[])> (ACCOUNT_SETTINGS)
<android.util.SparseArray: void setValueAt(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean disableNetwork(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteUserActivity(int,int)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setSpeedRequired(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.PluralRules: int attrForQuantity(int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void setKeepScreenOn(boolean)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setTeardownRequested(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void revokeUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void setDefaultTouchRecepient(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputConnectionWrapper: void setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void adjustStreamVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setImeOptions(int)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperService$Stub$Proxy: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Region: boolean set(android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setView(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int diff(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void onFilterComplete(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)> (ACCOUNT_SETTINGS)
<android.view.Surface: int describeContents()> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.ApplicationErrorReport: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClient$LoggingConfiguration: void access$800(android.net.http.AndroidHttpClient$LoggingConfiguration,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$11: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onReceivedSslError(android.webkit.SslErrorHandler,android.net.http.SslError)> (ACCOUNT_SETTINGS)
<android.content.res.CompatibilityInfo$Translator: void translateEventInScreenToAppWindow(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void setCompatibilityInfo(android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub$Proxy: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,byte[])> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setStartOffset(long)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void updateNetworkState(int,android.net.NetworkInfo)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setSoTimeout(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstallObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.net.http.Connection: void setCanPersist(boolean)> (ACCOUNT_SETTINGS)
<android.util.SparseArray: int keyAt(int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: int lookupHost(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setPasskey(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView$HitTestResult: int access$300(android.webkit.WebView$HitTestResult)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticatorResponse$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setProgress(int)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusListener$Stub$Proxy: void onNmeaReceived(long,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Handler: void removeCallbacks(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setLightBrightness_UNCHECKED(int,int)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)> (ACCOUNT_SETTINGS)
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerResponse: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View$OnTouchListener)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setUseWideViewPort(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$1: void removeCallback(android.view.SurfaceHolder$Callback)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: void setLoadStyle(int,int)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: void removeCategory(java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void updateNetworkName(boolean,java.lang.String,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.webkit.Plugin: void setFileName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSize(float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: boolean onDispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.net.http.IdleCache: int access$100(android.net.http.IdleCache)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setSupportsBearing(boolean)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(int[],android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColor(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$300(int)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean removeBond(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setScrollContainer(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: boolean onLongClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendCharacterSync(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextBeforeCursor(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setFillBefore(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setScreenDensity(int)> (ACCOUNT_SETTINGS)
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void setPrefix(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.os.PkgUsageStats: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setSelector(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHeight(int)> (ACCOUNT_SETTINGS)
<android.text.style.URLSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.SyncStats: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)> (ACCOUNT_SETTINGS)
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setClippingEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void deleteSurroundingText(int,int)> (ACCOUNT_SETTINGS)
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.IStatusBar$Stub$Proxy: void disable(int,android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setHasAlpha(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$2: void onAnimationEnd(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)> (ACCOUNT_SETTINGS)
<android.net.http.HttpsConnection: void initializeEngine(java.io.File)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.server.BluetoothEventLoop: void onPropertyChanged(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IUsageStats$Stub$Proxy: void noteLaunchTime(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService$LockList: void access$1600(com.android.server.WifiService$LockList,java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMinWidth(int)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSaveFormData(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setFlags(int)> (ACCOUNT_SETTINGS)
<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setUserAgent(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.content.IntentSender: int describeContents()> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void vibratePattern(long[],int,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.os.RegistrantList: void notifyException(java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView$ExtendedZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.ContentQueryMap: void setKeepUpdated(boolean)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreSession$Stub$Proxy: int performRestore(long,android.backup.IRestoreObserver)> (ACCOUNT_SETTINGS)
<android.os.IPermissionController$Stub$Proxy: boolean checkPermission(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: void setKeyguardEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.location.LocationProviderProxy: void updateLocation(android.location.Location)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(android.preference.Preference)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setParent(android.app.Activity)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setShortcut(boolean,char)> (ACCOUNT_SETTINGS)
<android.util.MathUtils: int random(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setEditableFactory(android.text.Editable$Factory)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$1: void setType(int)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void dispatchWallpaperOffsets(float,float,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setLongClickable(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)> (ACCOUNT_SETTINGS)
<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessStats$1: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setPersistent(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.opengl.GLWrapperBase: int glCheckFramebufferStatusOES(int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<com.android.server.WifiWatchdogService$AccessPoint: int hashCode()> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void notifyDependencyChange(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$BondState: boolean hasAutoPairingFailed(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.Metadata: boolean parse(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker$1: void onReleased(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(char[],int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.RotarySelector: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.server.am.BaseErrorDialog: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)> android.permission.BROADCAST_STICKY (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void updateDeviceServiceChannelCache(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void setFormat(int)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: boolean deleteDatabase(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void access$700(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$1800(android.media.AudioService)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)> (ACCOUNT_SETTINGS)
<android.app.Service: int onStartCommand(android.content.Intent,int,int)> (ACCOUNT_SETTINGS)
<android.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.server.search.SearchableInfo$ActionKeyInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setDuration(long)> (ACCOUNT_SETTINGS)
<android.database.CursorToBulkCursorAdaptor: boolean deleteRow(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Objects: java.lang.Object nonNull(java.lang.Object,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.http.Request: void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpHost,java.lang.String,java.io.InputStream,int,android.net.http.EventHandler,java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: int allocateAppWidgetId(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void removeProvidersForPackageLocked(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setSecondaryProgress(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)> (ACCOUNT_SETTINGS)
<android.widget.GridView: int findMotionRow(int)> (ACCOUNT_SETTINGS)
<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleServiceArgs(android.os.IBinder,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealLongArraySize(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setKeepScreenOn(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: boolean setNumAllowedChannels(int)> (ACCOUNT_SETTINGS)
<android.app.Notification: int describeContents()> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void setProperty(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorDescription: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$3500(android.webkit.WebView)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateBlob(int,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ReceiverDispatcher$InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setAltitudeRequired(boolean)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setProgressStyle(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHighlightColor(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String access$900(android.accounts.AccountManagerService,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setHorizontalGravity(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.PackedIntVector: void setValue(int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setEmptyView(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: int invoke(android.os.Parcel,android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.ConnectivityService: void setBackgroundDataSetting(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void removeProviderLocked(int,com.android.server.AppWidgetService$Provider)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void setIsDiscovering(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void remove(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.location.ILocationListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void toggleSoftInput(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)> (ACCOUNT_SETTINGS)
<android.text.IClipboard$Stub$Proxy: void setClipboardText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.res.CompatibilityInfo: void setExpandable(boolean)> (ACCOUNT_SETTINGS)
<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])> (ACCOUNT_SETTINGS)
<android.location.IGpsStatusListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.Criteria: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegQuality(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealCharArraySize(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void dumpLocked(java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream: int read(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.PluralRules: int attrForNumber(int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setNextSelectedPositionInt(int)> (ACCOUNT_SETTINGS)
<android.widget.ListView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: boolean isToday(long)> (ACCOUNT_SETTINGS)
<android.location.Address: void setSubAdminArea(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: void parseDateTime(java.lang.String,java.lang.String,java.util.Calendar)> (ACCOUNT_SETTINGS)
<android.app.IActivityWatcher$Stub$Proxy: void closingSystemDialogs(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallbackList: int beginBroadcast()> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setTranscriptMode(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setSupportsAltitude(boolean)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.View: void postInvalidateDelayed(long)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)> (ACCOUNT_SETTINGS)
<android.graphics.Picture: void writeToStream(java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperEngine$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean releaseWifiLock(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkUriPermission(android.net.Uri,int,int,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: boolean commitUpdates(java.util.Map)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void setIconVisibility(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$902(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityWatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ResolveInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,long)> (ACCOUNT_SETTINGS)
<android.location.Address: void setAdminArea(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setListSelection(int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void dispatchCloseSystemDialogs(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$400(android.widget.RelativeLayout$LayoutParams)> (ACCOUNT_SETTINGS)
<com.android.server.MountService$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit: android.server.data.CrashData unmarshallException(byte[])> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setLightFlashing_UNCHECKED(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout: void setVerticalGravity(int)> (ACCOUNT_SETTINGS)
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartSensor(int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setTextAndKeepSelection(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.TokenWatcher: int access$100(android.os.TokenWatcher)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setAutoBrightness_UNCHECKED(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.SET_WALLPAPER (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setSupportsSpeed(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void dispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: boolean matchAction(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void dispatchKey(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewCore$EventHub: int access$2202(android.webkit.WebViewCore$EventHub,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: void setSubtype(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.RectF: void set(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setText(int)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setNextFocusDownId(int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)> (ACCOUNT_SETTINGS)
<android.util.SparseArray: int indexOfValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.AccountUnlockScreen: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService$2: void onAnimationStart(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setRotate(float,float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen$3: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: java.lang.Exception access$500(android.accounts.AccountManager,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void access$1300(android.media.AudioService,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen: int access$602(com.android.internal.policy.impl.SimUnlockScreen,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: java.io.File access$500(java.io.File)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setValues(float[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSVToColor(float[])> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: java.util.List stringToPattern(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Service: void onStart(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: int access$708(com.android.internal.policy.impl.UnlockScreen)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void dispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean enableNetwork(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setTouchable(boolean)> (ACCOUNT_SETTINGS)
<android.util.StateSet: boolean stateSetMatches(int[],int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setInputExtras(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setInitialScale(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView$WebViewTransport: void setWebView(android.webkit.WebView)> (ACCOUNT_SETTINGS)
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageState(int[],boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setCacheColorHint(int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: int findMotionRow(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)> (ACCOUNT_SETTINGS)
<android.app.IBackupAgent$Stub$Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.server.status.DateView: void setUpdates(boolean)> (ACCOUNT_SETTINGS)
<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater$Factory)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,android.content.res.Configuration,java.util.Map)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.view.Window: void setFormat(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: boolean configureInterface(java.lang.String,android.net.DhcpInfo)> (ACCOUNT_SETTINGS)
<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void dispatchNetworkChanged(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)> (ACCOUNT_SETTINGS)
<android.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void disable(int,android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.RecentApplicationsDialog: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setMax(int)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.webkit.Plugin: void setDescription(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setPluginsEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceCallingPermission(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiConfiguration$EnterpriseField: void setValue(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$702(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void setStatus(int,android.os.Bundle,long)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPictureFormat(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsXtraDownloader: byte[] doDownload(java.lang.String,boolean,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void dispatchWallpaperOffsets(float,float,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)> (ACCOUNT_SETTINGS)
<android.graphics.Region: int access$000(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setScale(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void setAlpha(float)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setActive(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$1000(android.webkit.WebView)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)> (ACCOUNT_SETTINGS)
<android.os.INetStatService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit: void setApplicationObject(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkPermission(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.StateListDrawable$StateListState: int access$000(android.graphics.drawable.StateListDrawable$StateListState,int[])> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarIcon: void update(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.content.ComponentName startService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int access$200(android.server.BluetoothService)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$Session: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bindNull(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,int,java.lang.String,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageLevel(int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void updateAppWidgetIds(int[],android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateCursor(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int viewToContentY(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setRoamingStatus(boolean)> (ACCOUNT_SETTINGS)
<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: int checkCallingUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateFloat(int,float)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void onSelectionChanged(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void dispatchKey(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify$4: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void dispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$IEventListenerWrapper: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow$PopupViewContainer: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<android.webkit.LoadListener: void setRequestData(java.lang.String,java.util.Map,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)> (ACCOUNT_SETTINGS)
<android.app.ResultInfo: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean startScan(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$1002(android.webkit.WebView,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.ExpandedView: void setMaxHeight(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker$SettingsObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(android.view.View,int,int)> (ACCOUNT_SETTINGS)
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setZoom(int)> (ACCOUNT_SETTINGS)
<android.content.pm.Signature: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$200(android.widget.RelativeLayout$LayoutParams)> (ACCOUNT_SETTINGS)
<android.media.Ringtone: void setStreamType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onOrientationChange(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void clearPassword(android.accounts.Account)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)> (ACCOUNT_SETTINGS)
<android.view.View: boolean postDelayed(java.lang.Runnable,long)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFilterText(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1300(int)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: int indexOfValue(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void setInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setShouldDisableView(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean post(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setRepeatMode(int)> (ACCOUNT_SETTINGS)
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.media.AudioSystem: int setMode(int)> (ACCOUNT_SETTINGS)
<android.util.EventLog: int writeEvent(int,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.util.DisplayMetrics: void updateMetrics(android.content.res.CompatibilityInfo,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.CloseDragHandle: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: int access$800(com.android.internal.policy.impl.UnlockScreen)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManagerResponse$Stub$Proxy: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)> (ACCOUNT_SETTINGS)
<android.server.data.CrashData: void write(java.io.DataOutput)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void updateAppWidget(int,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$1700(android.media.AudioService$VolumeStreamState)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$500(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: boolean access$200(android.accounts.AccountManagerService,android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setLayoutResource(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLineSpacing(float,float)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMinHeight(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setMeasuredDimension(int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$AudioHandler$1: void onCompletion(android.media.MediaPlayer)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealShortArraySize(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setProgressBarVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableAlpha(int,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean disable(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setSoundEffectsEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setStackFromBottom(boolean)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMode(int)> (ACCOUNT_SETTINGS)
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)> (ACCOUNT_SETTINGS)
<android.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setNextFocusUpId(int)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: int access$400(android.widget.PopupWindow)> (ACCOUNT_SETTINGS)
<com.android.server.status.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void setSession(android.view.IWindowSession)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,byte[])> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$3300(android.media.AudioService$VolumeStreamState)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)> (ACCOUNT_SETTINGS)
<android.database.IContentObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setCheckable(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: void setIsAvailable(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorProxy: void onMove(int)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setAccuracy(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Debug: void dumpHprofData(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.webkit.Network: void setProxyUsername(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void access$3400(android.media.AudioService,int,boolean)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setTrust(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.text.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.IRotationWatcher$Stub$Proxy: void onRotationChanged(int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.server.KeyInputQueue: void setOrientation(int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPictureSize(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsLongitude(double)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateSelection(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.view.View: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.am.ActivityResult: void <init>(com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1200(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.widget.ArrayAdapter: void setDropDownViewResource(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setFillEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RotateDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setIconMenuView(com.android.internal.view.menu.IconMenuView)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean cancelPairingUserInput(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.view.View: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int)> (ACCOUNT_SETTINGS)
<android.os.IMessenger$Stub$Proxy: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void notifyStateChange(android.net.NetworkInfo$DetailedState,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$1300(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.view.View: void startAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.EditorInfo: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.SimUnlockScreen: void onKeyboardChange(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateInt(int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setRingerMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setFillAfter(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setUsingInputMethod(boolean)> (ACCOUNT_SETTINGS)
<android.net.Uri$StringUri: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: int enforceCallingUid(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void removeStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: android.os.IBinder addIcon(com.android.server.status.IconData,com.android.server.status.NotificationData)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setShrinksStandaloneImagesToFit(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setOrder(int)> (ACCOUNT_SETTINGS)
<android.hardware.ISensorService$Stub$Proxy: boolean enableSensor(android.os.IBinder,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setMinimumFontSize(int)> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)> (ACCOUNT_SETTINGS)
<android.net.Uri$HierarchicalUri: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setSize(int,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.view.WindowOrientationListener: int access$002(android.view.WindowOrientationListener,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin$PreferencesClickHandler)> (ACCOUNT_SETTINGS)
<android.content.Intent: int fillIn(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextAfterCursor(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void setMinTime(long)> (ACCOUNT_SETTINGS)
<android.os.PatternMatcher: boolean matchPattern(java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean stopService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent$FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int)> (ACCOUNT_SETTINGS)
<android.text.style.StyleSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.os.Process: void killProcess(int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper: int access$400(android.accounts.AuthenticatorBindHelper)> (ACCOUNT_SETTINGS)
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setThoroughfare(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector: void setExpandedGroupMetadataList(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetProviderInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.ViewTreeObserver$InternalInsetsInfo: void setTouchableInsets(int)> (ACCOUNT_SETTINGS)
<android.location.ILocationListener$Stub$Proxy: void onProviderDisabled(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView$OutlineDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.GlobalActions$4: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.text.format.Time: long setJulianDay(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setHiddenSSID(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Handler: void dispatchMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextAppearance(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setFooterDividersEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setAppCacheMaxSize(long)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.webkit.WebTextView: void setMaxLength(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setMinimumHeight(int)> (ACCOUNT_SETTINGS)
<android.content.pm.PermissionInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider$3: boolean sendNiResponse(int,int)> (ACCOUNT_SETTINGS)
<android.media.Metadata: int lastType()> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean removeNetwork(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onSimStateChanged(com.android.internal.telephony.IccCard$State)> (ACCOUNT_SETTINGS)
<android.view.View: int resolveSize(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void enableLocationTracking(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$112(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void displayCompletions(android.view.inputmethod.CompletionInfo[])> (ACCOUNT_SETTINGS)
<android.app.Activity: void setRequestedOrientation(int)> (ACCOUNT_SETTINGS)
<android.util.SparseIntArray: int keyAt(int)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker$1: void onAcquired(android.view.VelocityTracker)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void enableRssiPolling(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.status.DateView$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void init(android.app.ActivityThread$PackageInfo,android.os.IBinder,android.app.ActivityThread,android.content.res.Resources)> (ACCOUNT_SETTINGS)
<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object,java.util.HashMap,android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)> (ACCOUNT_SETTINGS)
<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)> (ACCOUNT_SETTINGS)
<android.location.Location: void setSpeed(float)> (ACCOUNT_SETTINGS)
<android.location.INetInitiatedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setWorkersEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void unregisterContentObserver(android.database.IContentObserver)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean setPin(java.lang.String,byte[])> (ACCOUNT_SETTINGS)
<android.database.ContentObserver$Transport: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void formatMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setId(int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setDuplicateParentStateEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: boolean setLevel(int)> (ACCOUNT_SETTINGS)
<com.android.server.status.CloseDragHandle: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils$InsertHelper: void bind(int,boolean)> (ACCOUNT_SETTINGS)
<android.location.Location: void setBearing(float)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: void setFailover(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int pointToPosition(int,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<com.android.server.am.IntentBindRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$502(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setScrollBarStyle(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onKeyboardChange(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setError(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablePadding(int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$900(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<com.android.internal.util.TypedProperties: int interpretType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setWillNotCacheDrawing(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void requestThumbnail(android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextScaleX(float)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: int access$000(android.content.ContentProviderOperation$Builder)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsTimestamp(long)> (ACCOUNT_SETTINGS)
<android.app.ApplicationErrorReport$AnrInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.ContentObservable: void dispatchChange(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<android.view.View: void setSaveEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: boolean isUTC(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify$4: int compare(android.text.util.LinkSpec,android.text.util.LinkSpec)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)> (ACCOUNT_SETTINGS)
<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.Location: void setTime(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void updateIcon(android.os.IBinder,com.android.server.status.IconData,com.android.server.status.NotificationData)> (ACCOUNT_SETTINGS)
<android.text.format.Time: boolean parse(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageDataObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.Writer)> (ACCOUNT_SETTINGS)
<android.util.PrintWriterPrinter: void println(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1700(int)> (ACCOUNT_SETTINGS)
<android.text.format.Time: boolean parse3339(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$SetOnClickPendingIntent$1: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)> android.permission.GLOBAL_SEARCH (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$000(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.backup.RestoreSet: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setInverseBackgroundForced(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.SyncStatusInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void playSoundEffectVolume(int,float)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setSelectionInt(int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setStartTime(long)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: int access$1500(android.server.BluetoothService)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setVolumeControlStream(int)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.ServiceInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1000(int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int contentToViewY(int)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void printShortString(java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<android.os.Parcel: void writeSerializable(java.io.Serializable)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper: void unbind(android.accounts.AuthenticatorBindHelper$Callback)> (ACCOUNT_SETTINGS)
<com.android.server.MountListener: void formatMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<android.content.IIntentSender$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$302(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService$4: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.util.SparseArray: void delete(int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: java.lang.String parsePackageName(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setSubtype(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider$2: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService$3: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewCore$EventHub: int access$2200(android.webkit.WebViewCore$EventHub)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void removeRemoteDeviceProperties(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$2300(android.media.AudioService)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewDatabase: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onRefreshBatteryInfo(boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.graphics.RectF: void set(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.util.LongSparseArray: void delete(long)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.location.Location: void setLatitude(double)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgress(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setWeightSum(float)> (ACCOUNT_SETTINGS)
<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setNotificationVisible(boolean,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)> (ACCOUNT_SETTINGS)
<android.server.BluetoothA2dpService: boolean connectSink(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshot(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$800(android.media.AudioService$VolumeStreamState)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: int breakText(char[],int,int,float,float[])> (ACCOUNT_SETTINGS)
<com.android.server.am.AppBindRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher$ViewFactory)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMinEms(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLinkTextColor(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColor(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.text.method.LinkMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setSelectable(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.status.FixedSizeDrawable: void setBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.ComponentName: int compareTo(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuView$1: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setWallpaperPosition(android.os.IBinder,float,float)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)> (ACCOUNT_SETTINGS)
<android.location.Criteria: void setCostAllowed(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)> (ACCOUNT_SETTINGS)
<android.webkit.Network: void setProxyPassword(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.location.Address: int access$100(android.location.Address)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.RotarySelector: void setRightHandleResource(int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3602(android.media.AudioService,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void access$1200(android.server.BluetoothService,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSpannableFactory(android.text.Spannable$Factory)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.http.RequestQueue$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setShadowLayer(float,float,float,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub$Proxy: boolean activityStarting(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.preference.Preference: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.CharSequences: int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.webkit.LoadListener: void setCacheLoader(android.webkit.CacheLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.GlobalActions$5: void onServiceStateChanged(android.telephony.ServiceState)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.media.Metadata: int lastSytemId()> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void unflatten(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.ToneGenerator: boolean startTone(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void setDateViewVisibility(boolean,int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setMaxHeight(int)> (ACCOUNT_SETTINGS)
<android.text.style.AlignmentSpan$Standard: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.server.ConnectivityService: void setNetworkPreference(int)> android.permission.BLUETOOTH_ADMIN (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setResultCode(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<android.graphics.Rect: void set(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.location.Location: void setAltitude(double)> (ACCOUNT_SETTINGS)
<android.os.MemoryFile$MemoryInputStream: int available()> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebHistoryItem: void setFavicon(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.server.WifiWatchdogService$2: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setAllowFileAccess(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean removeHeaderView(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onEditorAction(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setTitle(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealObjectArraySize(int)> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQuery: void bindString(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setMax(int)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateString(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.Picture$RecordingCanvas: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1100(int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.View$1: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void access$000(android.accounts.AccountManagerService,android.accounts.Account)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.RotarySelector: void setLeftHandleResource(int)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils$InsertHelper,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.view.Window: void setSoftInputMode(int)> (ACCOUNT_SETTINGS)
<android.net.MobileDataStateTracker: boolean setRadio(boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IEventListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void dispatchWallpaperOffsets(float,float,boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiOff(int)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setSSID(java.lang.String)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: void setNextFocusLeftId(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setZoomCallback(android.hardware.Camera$ZoomCallback)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)> (ACCOUNT_SETTINGS)
<android.media.Ringtone: void setTitle(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setWidth(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void adjustSuggestedStreamVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.media.AsyncPlayer: void setUsesWakeLock(android.content.Context)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.IIntentReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener$SettingsObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setNetworkAvailable(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.location.MockProvider: void updateLocation(android.location.Location)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$700(int,int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1200(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquired(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitwiseInputStream: int read(int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$302(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkInfo: void setRoaming(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setProgress(int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$ReflectionAction: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$100(int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setViewVisibility(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButtonsController$4: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.location.DummyLocationProvider: void setRequiresSatellite(boolean)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setIncludeFontPadding(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void onReceivedIcon(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout: void setHorizontalGravity(int)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setReceiveBufferSize(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: boolean equals(byte[],byte[],int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQuery: void bindLong(int,long)> (ACCOUNT_SETTINGS)
<com.android.server.am.BroadcastFilter: void dumpInReceiverList(java.io.PrintWriter,android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTypeface(android.graphics.Typeface)> (ACCOUNT_SETTINGS)
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean updateFloat(int,float)> (ACCOUNT_SETTINGS)
<android.util.SparseBooleanArray: int keyAt(int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setCaptionMode(boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub$Proxy: boolean activityResuming(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$600(android.media.AudioService$VolumeStreamState,int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int blue(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setOutsideTouchable(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setExtractedText(android.view.inputmethod.ExtractedText,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSingleLine(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.RegisteredServicesCache$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.PackedIntVector: void deleteAt(int,int)> (ACCOUNT_SETTINGS)
<android.util.SparseBooleanArray: int indexOfKey(int)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: void assign(java.util.Calendar,java.util.Calendar)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void setAttentionLight(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setSinCos(float,float,float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void set(android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState access$100(android.net.MobileDataStateTracker,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setSinCos(float,float)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setZOrderOnTop(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.backup.BackupDataInput: int readEntityData(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.util.SparseBooleanArray: void delete(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setScroller(android.widget.Scroller)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void setWallpaper(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setCustomTitle(android.view.View)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int viewToContentX(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void readStateFromFileLocked(java.io.File)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenBrightness(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)> (ACCOUNT_SETTINGS)
<android.content.res.CompatibilityInfo$1: void setExpandable(boolean)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHint(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClient: void setThreadBlocked(boolean)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int argb(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)> (ACCOUNT_SETTINGS)
<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$600(int,int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: void setWritePermission(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.ResultReceiver: void send(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setKey(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: void setTo(android.util.TypedValue)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)> (ACCOUNT_SETTINGS)
<android.view.Surface$CompatibleCanvas: void setMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$202(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setClipToPadding(boolean)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setOrderedHint(boolean)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.VelocityTracker$1: void onAcquired(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.view.View: void setHorizontalScrollBarEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setVerticalGravity(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageURI(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setDefaultKeyMode(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)> (ACCOUNT_SETTINGS)
<android.ddm.DdmHandleHello: void sendWAIT(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: int stopUsingNetworkFeature(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: boolean onDispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)> (ACCOUNT_SETTINGS)
<android.text.AlteredCharSequence$AlteredSpanned: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService$2: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.Window: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.text.PackedIntVector: void insertAt(int,int[])> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setColumnWidth(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,int,java.lang.String,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.net.ParentalControlState: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendStringSync(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)> android.permission.USE_CREDENTIALS (ACCOUNT_SETTINGS)
<android.os.ICheckinService$Stub$Proxy: void getParentalControlState(android.os.IParentalControlCallback,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void unmountMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)> (ACCOUNT_SETTINGS)
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setOwnerActivity(android.app.Activity)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setMacAddress(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: boolean parseDateTime(java.lang.String,java.util.Calendar)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Path: void set(android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPreviewFormat(int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsAltitude(double)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent$DispatcherState: void performedLongPress(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.os.HandlerStateMachine: void sendMessageDelayed(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreObserver$Stub$Proxy: void restoreStarting(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHintTextColor(int)> (ACCOUNT_SETTINGS)
<android.webkit.Plugin: void setPath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)> (ACCOUNT_SETTINGS)
<android.media.SoundPool: int load(android.content.Context,int,int)> (ACCOUNT_SETTINGS)
<android.location.INetInitiatedListener$Stub$Proxy: boolean sendNiResponse(int,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.AuthenticatorBindHelper: int access$600(android.accounts.AuthenticatorBindHelper)> (ACCOUNT_SETTINGS)
<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.location.Location: void setLongitude(double)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IEventListener$Stub$Proxy: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.net.Uri$OpaqueUri: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.location.LocationProviderProxy: void updateNetworkState(int,android.net.NetworkInfo)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsLatitude(double)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorToCursorAdaptor: void set(android.database.IBulkCursor)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setShape(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void removeCallback(android.view.SurfaceHolder$Callback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void setMassStorageEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: void setNinePatchChunk(byte[])> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void deleteAppWidgetId(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)> android.permission.MODIFY_AUDIO_SETTINGS (ACCOUNT_SETTINGS)
<com.android.server.status.FixedSizeDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.content.res.PluralRules$cs: int quantityForNumber(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void revokeAppPermission(android.accounts.Account,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService$3: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter$AuthorityEntry: int access$100(android.content.IntentFilter$AuthorityEntry)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.Uri$HierarchicalUri: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setGravity(int)> (ACCOUNT_SETTINGS)
<android.text.style.UnderlineSpan: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void sessionCreated(com.android.internal.view.IInputMethodSession)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPaintFlags(int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforcePermission(java.lang.String,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.WifiWatchdogService: int access$600(com.android.server.WifiWatchdogService)> (ACCOUNT_SETTINGS)
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)> (ACCOUNT_SETTINGS)
<android.os.Registrant: void notifyException(java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$200(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$1002(android.media.AudioService$VolumeStreamState$VolumeDeathHandler,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkStateTracker: void setDetailedStateInternal(android.net.NetworkInfo$DetailedState)> (ACCOUNT_SETTINGS)
<android.content.ActiveSyncInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.pm.InstrumentationInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setVersion(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setChoiceMode(int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3200(android.media.AudioService)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ReceiverDispatcher$Args: int access$302(android.app.ActivityThread$PackageInfo$ReceiverDispatcher$Args,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void dispatchKey(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setJsFlags(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: android.content.Intent access$100(android.app.ApplicationContext,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,android.content.Context)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputConnectionWrapper: void sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.net.Uri$AbstractHierarchicalUri: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setNavDump(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$402(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$RemoveAccountSession: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: int access$500(android.database.sqlite.SQLiteCursor)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setSelectionInt(int)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void setPlayNotificationSounds(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundColor(int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardUpdateMonitor$2: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.util.SparseBooleanArray: void append(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void setWidth(int)> (ACCOUNT_SETTINGS)
<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageDeleteObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void setMinTime(long)> (ACCOUNT_SETTINGS)
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$1100(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$312(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$2600(android.webkit.WebView)> (ACCOUNT_SETTINGS)
<android.content.pm.ConfigurationInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.MotionEvent: void setLocation(float,float)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)> (ACCOUNT_SETTINGS)
<android.location.Location: void setAccuracy(float)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$PackageInfo$ReceiverDispatcher$Args: int access$300(android.app.ActivityThread$PackageInfo$ReceiverDispatcher$Args)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void setEnableFallback(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.location.Address: void setAddressLine(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Intent: boolean hasExtra(java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.IThumbnailReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateLong(int,long)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: int indexOfChild(android.view.View)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageStatsObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)> (ACCOUNT_SETTINGS)
<android.preference.PreferenceGroup: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockReleased(int)> (ACCOUNT_SETTINGS)
<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,android.os.IBinder,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void dispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: void setInStealthMode(boolean)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: boolean updateDouble(int,double)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: boolean writeStateToFileLocked(java.io.File)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setFindDialogHeight(int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsLocationProvider: void setMinTime(long)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageDataObserver$Stub$Proxy: void onRemoveCompleted(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)> android.permission.MANAGE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy$ResultTransport: void setResult(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot: void dispatchPointer(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$1002(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.AudioService$SettingsObserver: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorProxy: boolean deleteRow(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateExtractedText(int,android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)> (ACCOUNT_SETTINGS)
<android.view.WindowOrientationListener: int access$000(android.view.WindowOrientationListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])> (ACCOUNT_SETTINGS)
<android.media.AudioService: boolean checkAudioSettingsPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.KeyInputQueue: int rotateKeyCode(int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$202(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: int lookForSelectablePosition(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onRefreshCarrierInfo(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.webkit.FrameLoader: void setHeaders(java.util.HashMap)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void setAttentionLight(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.server.ConnectivityService: boolean setRadio(int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)> (ACCOUNT_SETTINGS)
<android.view.IOnKeyguardExitResult$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: int describeContents()> (ACCOUNT_SETTINGS)
<android.content.IIntentSender$Stub$Proxy: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$IEventListenerWrapper: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: android.os.IBinder addIcon(java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setTag(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.server.WifiWatchdogService$1: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCursorVisible(boolean)> (ACCOUNT_SETTINGS)
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,int,int,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo$1: android.net.wifi.WifiInfo createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.preference.Preference: void setWidgetLayoutResource(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.TypedProperties: void parse(java.io.Reader,java.util.Map)> (ACCOUNT_SETTINGS)
<android.text.Selection: void removeSelection(android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void performFinalCleanup(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void access$1100(com.android.internal.policy.impl.UnlockScreen,com.android.internal.policy.impl.UnlockScreen$FooterMode)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setRotation(int)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo$1: void onReleased(android.util.Poolable)> (ACCOUNT_SETTINGS)
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.net.MobileDataStateTracker: int startUsingNetworkFeature(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setEtag(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: int scaleFromDensity(int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.text.style.SubscriptSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3700(android.media.AudioService)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternView: void setOnPatternListener(com.android.internal.widget.LockPatternView$OnPatternListener)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTitleColor(int)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver,android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<com.android.internal.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$700(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.location.Location: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)> (ACCOUNT_SETTINGS)
<android.os.MemoryFile$MemoryInputStream: int read()> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.KeyguardUpdateMonitor$3: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.os.IParentalControlCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.text.style.URLSpan: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3702(android.media.AudioService,int)> (ACCOUNT_SETTINGS)
<android.text.style.SuperscriptSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: int access$700(android.media.AudioService$VolumeStreamState)> (ACCOUNT_SETTINGS)
<android.view.IApplicationToken$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setView(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: int access$000(android.media.MediaPlayer)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)> (ACCOUNT_SETTINGS)
<android.os.Message: void setData(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void setSkew(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.Point: void set(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.app.Service: void startForeground(int,android.app.Notification)> (ACCOUNT_SETTINGS)
<android.widget.Filter: void setDelayer(android.widget.Filter$Delayer)> (ACCOUNT_SETTINGS)
<com.android.internal.view.BaseIWindow: void dispatchTrackball(android.view.MotionEvent,long,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: int access$1102(android.webkit.WebView,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSBtoColor(float[])> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$FlingRunnable: void start(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,org.apache.harmony.xnet.provider.jsse.SSLClientSessionCache)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> (ACCOUNT_SETTINGS)
<android.graphics.RectF: void set(android.graphics.RectF)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void dumpMap(java.io.PrintWriter,java.lang.String,java.util.Map)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setIpAddress(int)> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3100(android.media.AudioService)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$100(android.widget.RelativeLayout$LayoutParams)> (ACCOUNT_SETTINGS)
<android.media.AudioService$AudioHandler$2: boolean onError(android.media.MediaPlayer,int,int)> (ACCOUNT_SETTINGS)
<android.text.style.ScaleXSpan: int describeContents()> (ACCOUNT_SETTINGS)
<android.media.AudioService: int access$3802(android.media.AudioService,int)> (ACCOUNT_SETTINGS)
<android.app.IStatusBar$Stub$Proxy: void removeIcon(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setMaxWidth(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarService: void updateExpandedViewPos(int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$MyWindow: void dispatchKey(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setARGB(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.database.CursorWindow: boolean setNumColumns(int)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setViewport(int,int)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter$CursorToStringConverter)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)> (ACCOUNT_SETTINGS)
<android.backup.IRestoreObserver$Stub$Proxy: void restoreFinished(int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setRepeatCount(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<android.view.MotionEvent: void setEdgeFlags(int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)> (ACCOUNT_SETTINGS)
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$800(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)> (ACCOUNT_SETTINGS)
<android.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.Surface: void setOrientation(int,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebViewCore$3: void onReceiveValue(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: int access$300(android.widget.PopupWindow)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: int access$1102(com.android.server.WifiService,int)> (ACCOUNT_SETTINGS)
<android.net.http.CharArrayBuffers: int setLowercaseIndexOf(org.apache.http.util.CharArrayBuffer,int)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void setBaselineAligned(boolean)> (ACCOUNT_SETTINGS)
<android.app.Service: void setForeground(boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)> (ACCOUNT_SETTINGS)
<android.webkit.CallbackProxy: void setDownloadListener(android.webkit.DownloadListener)> (ACCOUNT_SETTINGS)
<android.os.SystemService: void stop(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Matrix: void set(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onRefreshCarrierInfo(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: int access$1200(android.widget.AbsListView)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setAcceptRanges(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: int startUsingNetworkFeature(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$DependencyGraph$Node$1: void onAcquired(android.widget.RelativeLayout$DependencyGraph$Node)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.GlobalActions: void onDismiss(android.content.DialogInterface)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)> (ACCOUNT_SETTINGS)
<com.android.server.HardwareService: void enableCameraFlash(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setItemCount(int)> (ACCOUNT_SETTINGS)
<android.text.format.Time: void set(android.text.format.Time)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.View: void setScrollbarFadingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.opengl.GLLogWrapper$PointerInfo: int sizeof(int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: boolean enable(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void setWallpaper(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void setOuterContext(android.content.Context)> (ACCOUNT_SETTINGS)
<com.android.server.status.StatusBarView: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void setFillViewport(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.MemoryFile$MemoryOutputStream: void write(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.os.Handler: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.ISensorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)> (ACCOUNT_SETTINGS)
<android.os.HandlerStateMachine: void setDbg(boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: boolean performHapticFeedback(android.view.IWindow,int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$100(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setDetachWallpaper(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$102(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setVerticalSpacing(int)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setView(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setSelectionFromTop(int,int)> (ACCOUNT_SETTINGS)
<android.server.BluetoothService: void setRemoteDeviceProperty(java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setDrawingCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.ViewRoot$W: void dispatchAppVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInfo: int describeContents()> (ACCOUNT_SETTINGS)
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.view.View: void setContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)> (ACCOUNT_SETTINGS)
<android.graphics.Region: int describeContents()> (ACCOUNT_SETTINGS)
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.BROADCAST_STICKY (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: android.content.pm.Signature stringToSignature(java.lang.String)> (ACCOUNT_SETTINGS)
<android.emoji.EmojiFactory: int access$000(android.emoji.EmojiFactory)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQuery: void bindDouble(int,double)> (ACCOUNT_SETTINGS)
<android.view.View: void setPressed(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.am.BroadcastFilter: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.PluralRules$en: int quantityForNumber(int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setWindowType(int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)> (ACCOUNT_SETTINGS)
<android.media.AudioService$VolumeStreamState: boolean setIndex(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.LockScreen: void onGrabbedStateChange(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: void setReadPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IUsageStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)> (ACCOUNT_SETTINGS)
<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderResult: int describeContents()> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setProgressBarIndeterminate(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.os.MemoryFile$MemoryInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void unbindService(android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiStateTracker: void setBluetoothScanMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.ListView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMaxHeight(int)> (ACCOUNT_SETTINGS)
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ErrorPopup: void update(int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.net.http.RequestHandle: void setRedirectCount(int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void setTransformationType(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerResponse: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)> (ACCOUNT_SETTINGS)
<android.view.View: void setHapticFeedbackEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.os.IHardwareService$Stub$Proxy: void vibratePattern(long[],int,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.RelativeLayout$LayoutParams: int access$212(android.widget.RelativeLayout$LayoutParams,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)> (ACCOUNT_SETTINGS)
<android.location.GpsStatus: void setStatus(android.location.GpsStatus)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService: void updateProvidersForPackageLocked(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.Metadata: int firstCustomId()> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView$RecyclerListener)> (ACCOUNT_SETTINGS)
<android.widget.TextView$SavedState: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setMinLines(int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)> (ACCOUNT_SETTINGS)
<android.view.View: void saveHierarchyState(android.util.SparseArray)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSavePassword(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastXmlSerializer: void setProperty(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)> (ACCOUNT_SETTINGS)
<com.android.internal.os.AtomicFile: void failWrite(java.io.FileOutputStream)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void setSchedulingGroup(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startManagingCursor(android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int modeToMode(android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,java.lang.StringBuilder)> (ACCOUNT_SETTINGS)
<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)> (ACCOUNT_SETTINGS)
<com.android.server.am.TaskRecord: void <init>(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<com.android.server.IntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setDensity(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.impl.UnlockScreen: int access$808(com.android.internal.policy.impl.UnlockScreen)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.BatteryService$1: void onUEvent(android.os.UEventObserver$UEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView$ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.server.AppWidgetService$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.Selection: void extendSelection(android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)> (ACCOUNT_SETTINGS)
<android.net.http.Request: void setConnection(android.net.http.Connection)> (ACCOUNT_SETTINGS)
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneDataConnectionState(int,boolean)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void addListener(int)> (ACCOUNT_SETTINGS)
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessage(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: boolean onMove(int,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void dispatchWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void setOnBattery(boolean,int)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.IMountService$Stub$Proxy: void mountMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.SyncAdapterType: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int access$300(com.android.internal.view.menu.MenuBuilder)> (ACCOUNT_SETTINGS)
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.IStatusBar$Stub$Proxy: void updateIcon(android.os.IBinder,java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.accounts.Account: int hashCode()> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int idealBooleanArraySize(int)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.IContentObserver$Stub$Proxy: void onChange(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationErrorReport$CrashInfo: void dump(android.util.Printer,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$AttachInfo$InvalidateInfo$1: void onReleased(android.view.View$AttachInfo$InvalidateInfo)> (ACCOUNT_SETTINGS)
<android.security.Sha1MessageDigest: byte[] digest(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.logging.AndroidHandler$1: java.lang.String format(java.util.logging.LogRecord)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$BaseFutureTask$Response: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)> (ACCOUNT_SETTINGS)
<com.android.server.MountListener: void mountMedia(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationContext: void unregisterReceiver(android.content.BroadcastReceiver)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: void setSupplicantState(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(int)> (ACCOUNT_SETTINGS)
<android.text.method.BaseKeyListener: int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setRingerMode(int)> (ACCOUNT_SETTINGS)
<android.os.Debug: void setFieldsOn(java.lang.Class,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHorizontallyScrolling(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorResponse: int describeContents()> (ACCOUNT_SETTINGS)
<android.net.MobileDataStateTracker: int stopUsingNetworkFeature(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: void setPerformanceResultsWriter(android.os.PerformanceCollector$PerformanceResultsWriter)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setBackgroundColor(int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSVToColor(int,float[])> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock$Parser: void setInput(java.io.Reader)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.Window: void setCallback(android.view.Window$Callback)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.net.wifi.WifiInfo: int describeContents()> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.webkit.LoadListener: void setUrl(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setExtracting(android.view.inputmethod.ExtractedTextRequest)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setZAdjustment(int)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setSendBufferSize(int)> (ACCOUNT_SETTINGS)
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.server.WifiService: int access$1100(com.android.server.WifiService)> (ACCOUNT_SETTINGS)
<android.location.ILocationProvider$Stub$Proxy: void enableLocationTracking(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void setType(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)> (ACCOUNT_SETTINGS)
<android.net.SntpClient: boolean requestTime(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setTextFilterEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: boolean filterEquals(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.IInstrumentationWatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)

SYNCHRONIZATION_DATA:
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.WAKE_LOCK (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$3: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void onAccountsUpdated(android.accounts.Account[])> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: long insertStartSyncEvent(android.accounts.Account,java.lang.String,long,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: boolean bindToSyncAdapter(android.content.pm.RegisteredServicesCache$ServiceInfo)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncPollAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> android.permission.WRITE_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.READ_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.SyncManager$5: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$6: void onStatusChanged(int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void access$2000(android.content.SyncManager,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncAlarmIntentReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncOperation: void setDelay(long)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void toString(java.lang.StringBuilder)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceDisconnected(android.content.ComponentName)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter,java.lang.StringBuilder)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void access$1000(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.ACCESS_NETWORK_STATE (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncQueue: void removeByKey(java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void dumpSyncState(java.io.PrintWriter,java.lang.StringBuilder)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: java.lang.String formatTime(long)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void scheduleLocalSync(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncOperation: int compareTo(java.lang.Object)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.WRITE_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.SyncManager$SyncQueue: void dump(java.lang.StringBuilder)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$2: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onFinished(android.content.SyncResult)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$4: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void scheduleSync(android.accounts.Account,java.lang.String,android.os.Bundle,long,boolean)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$1: void onReceive(android.content.Context,android.content.Intent)> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setActiveSync(android.content.SyncManager$ActiveSyncContext)> (SYNCHRONIZATION_DATA)
<android.content.ISyncAdapter$Stub$Proxy: void cancelSync(android.content.ISyncContext)> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: boolean isSyncActive(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void cancelSync(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.VIBRATE (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: boolean isSyncPending(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)

FILE:
<com.android.server.am.ActivityManagerService$ProvidersBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.BatteryService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)> (FILE)
<com.android.server.WifiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)> (FILE)
<android.view.inputmethod.InputMethodManager$1: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.LocalSocketImpl: void access$700(android.net.LocalSocketImpl,int,java.io.FileDescriptor)> (FILE)
<android.os.MemoryFile: int readBytes(byte[],int,int,int)> (FILE)
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService$MemBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)> (FILE)
<com.android.server.am.UsageStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)> (FILE)
<com.android.server.AlarmManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService$ServicesBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)> (FILE)
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: void dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.LocalSocketImpl: int access$400(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)> (FILE)
<android.net.LocalSocketImpl: int access$300(android.net.LocalSocketImpl,java.io.FileDescriptor)> (FILE)
<com.android.server.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService$BroadcastsBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.PhoneSubInfoProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> android.permission.DUMP (FILE)
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])> (FILE)
<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.PowerManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.os.MemoryFile: void <init>(java.io.FileDescriptor,int,java.lang.String)> (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<com.android.server.status.StatusBarService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.server.BluetoothA2dpService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.server.BluetoothService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.BLUETOOTH (FILE)
<android.app.ActivityThread$ApplicationThread: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.BACKUP (FILE)
<android.os.MemoryFile: boolean isMemoryFile(java.io.FileDescriptor)> (FILE)
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.LocalSocketImpl: void access$600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)> (FILE)
<com.android.server.am.ActivityManagerService: void access$900(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String[])> (FILE)
<com.android.internal.telephony.PhoneSubInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)> (FILE)
<com.android.server.NotificationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.Ringtone: void open(java.io.FileDescriptor)> (FILE)
<android.net.LocalSocketImpl: int access$100(android.net.LocalSocketImpl,java.io.FileDescriptor)> (FILE)
<com.android.server.am.ActivityManagerService$SendersBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.AppWidgetService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<com.android.server.am.ActivityManagerService$CpuBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.ACCESS_NETWORK_STATE (FILE)
<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.DUMP (FILE)

LOG:
<android.util.Log: int d(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int println(int,java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int e(java.lang.String,java.lang.String)> (LOG)
<android.util.LogPrinter: void println(java.lang.String)> (LOG)

SMS_MMS:
<com.google.android.mms.pdu.MultimediaMessagePdu: void setPriority(int)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setBcc(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: java.lang.String toIsoString(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setReadReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentId(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsMessageBase newFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCMT(java.lang.String[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setSelected(boolean)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setDate(long)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] encodeStrings(java.lang.String[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setTransactionId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setDate(long)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setFilename(byte[])> (SMS_MMS)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setLongInteger(long,int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setBody(com.google.android.mms.pdu.PduBody)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setExpiry(long)> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setReadStatus(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: void addPart(int,com.google.android.mms.pdu.PduPart)> (SMS_MMS)
<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setTransactionId(byte[])> (SMS_MMS)
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setDeliveryReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: void setTransactionId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] extract(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setMessageType(int)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageClass(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveText(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> (SMS_MMS)
<com.google.android.mms.util.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setContentType(byte[])> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValues(com.google.android.mms.pdu.EncodedStringValue[],int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setFromCodeScheme(int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setReadStatus(int)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setTransactionId(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmServiceStateTracker$1: void onChange(boolean)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setMessageSize(long)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: void setTextString(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: com.android.internal.telephony.cdma.sms.BearerData$TimeStamp fromByteArray(byte[])> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setMessageClass(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri move(android.net.Uri,android.net.Uri)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setDeliveryReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setExpiry(long)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)> (SMS_MMS)
<com.google.android.mms.util.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setToServiceId(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentDisposition(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setMessageSize(long)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromPdu(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setCharset(int)> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: void setReportAllowed(int)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setMmsVersion(int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCMTI(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setTransactionId(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int,byte[])> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)> android.permission.READ_SMS (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatchPdus(byte[][])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage newFromCDS(java.lang.String)> (SMS_MMS)
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)> android.permission.RECEIVE_SMS (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(com.android.internal.telephony.SmsMessageBase,com.android.internal.telephony.SmsHeader$ConcatRef,com.android.internal.telephony.SmsHeader$PortAddrs)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setFromServiceId(int)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setContentClass(int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher$1: void onClick(android.content.DialogInterface,int)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage newFromCMTI(java.lang.String)> (SMS_MMS)
<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])> android.permission.RECEIVE_SMS (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setDataUri(android.net.Uri)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: boolean addPart(com.google.android.mms.pdu.PduPart)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] split(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SmsRawData: int describeContents()> (SMS_MMS)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setOctet(int,int)> (SMS_MMS)
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.UserData: byte[] stringToAscii(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentType(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setCc(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void setmIccSmsInterfaceManager(com.android.internal.telephony.IccSmsInterfaceManager)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setReportAllowed(int)> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(java.lang.String[])> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)> android.permission.WAKE_LOCK (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setName(byte[])> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateParts(android.net.Uri,com.google.android.mms.pdu.PduBody)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveStatus(int)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setStatus(int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setDate(long)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> android.permission.WAKE_LOCK (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue copy(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setTextString(byte[],int)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentLocation(byte[])> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: com.android.internal.telephony.cdma.sms.CdmaSmsAddress parse(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setMessageClass(byte[])> (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> android.permission.SEND_SMS (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher$2: void onReceive(android.content.Context,android.content.Intent)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setMessageId(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setToCodeScheme(int)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: void appendTextString(byte[])> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage newFromCMT(java.lang.String[])> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromEfRecord(int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setData(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentTransferEncoding(byte[])> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage newFromCDS(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setStatus(int)> (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setDeliveryReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: void setCharacterSet(int)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setContentType(byte[])> (SMS_MMS)
<android.provider.Telephony$Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri persistPart(com.google.android.mms.pdu.PduPart,long)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setDate(long)> (SMS_MMS)
<com.android.internal.telephony.gsm.GSMPhone: void sendBurstDtmf(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setReadReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCDS(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> android.permission.WAKE_LOCK (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)

SYSTEM_SETTINGS:
<com.android.internal.telephony.BaseCommands: void setOnIccSmsFull(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void moveAppToken(int,android.os.IBinder)> (SYSTEM_SETTINGS)
<android.telephony.NeighboringCellInfo: void setRssi(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPin(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: int extensionEfForEf(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: int disableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService$1: void onEvent(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean updateWallpaperOffsetLocked(com.android.server.WindowManagerService$WindowState,int,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.SelectItemParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaUnmountable(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setGsmBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dumpProviders(java.io.PrintWriter)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onCallForwardingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setUniversalPinState(int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void removeLocked(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.RestrictedState: void setPsRestricted(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char,boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void removeProximityAlert(android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void installGeocodeProvider(android.location.IGeocodeProvider)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkResponseMessage: void setMenuSelection(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$ClockReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.server.AppWidgetService: void sendUpdateIntentLocked(com.android.server.AppWidgetService$Provider,int[])> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void removeWindowLocked(com.android.server.WindowManagerService$Session,com.android.server.WindowManagerService$WindowState)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dumpBroadcasts(java.io.PrintWriter)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int handleApplicationError(android.os.IBinder,int,java.lang.String,java.lang.String,java.lang.String,byte[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onMessageWaitingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setUnitTestMode(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$ResultReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaSubscription(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void removeUpdatesPI(android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataActivity(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection: void setHttpProxy(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Menu: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$KeyQ: void setHoldScreenLocked(boolean)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerRing(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordLoader: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: int convertDataActivityState(com.android.internal.telephony.Phone$DataActivityState)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$Receiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void virtualKeyFeedback(android.view.KeyEvent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaConnection: void updateParent(com.android.internal.telephony.cdma.CdmaCall,com.android.internal.telephony.cdma.CdmaCall)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: void setmIccPhoneBookInterfaceManager(com.android.internal.telephony.IccPhoneBookInterfaceManager)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$DimAnimator: void printTo(java.io.PrintWriter)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$LockList: int getIndex(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void appNotRespondingLocked(com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void validateAppTokens(java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void sendUssdResponse(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.ConnectivityService: int access$300(com.android.server.ConnectivityService,com.android.server.ConnectivityService$FeatureUser,boolean)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setScreenBrightnessOverride(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$3202(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setRotationUnchecked(int,boolean,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: int convertDataState(com.android.internal.telephony.Phone$DataState)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$1702(com.android.server.PowerManagerService,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: void setDataOnRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setState(com.android.internal.telephony.DataConnectionTracker$State)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Input: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setWallpaperAnimLayerAdjustmentLocked(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.UsimPhoneBookManager: int access$102(com.android.internal.telephony.gsm.UsimPhoneBookManager,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.RilMessageDecoder: void sendMessageParamsDecoded(com.android.internal.telephony.gsm.stk.ResultCode,com.android.internal.telephony.gsm.stk.CommandParams)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String)> (SYSTEM_SETTINGS)
<android.app.ActivityManager$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.GetInputParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int access$1300(com.android.server.WindowManagerService,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCallWaiting(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int presentationFromCLIP(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordLoader: void updateEF(com.android.internal.telephony.AdnRecord,int,int,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setInputMethodAnimLayerAdjustment(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMessageWaiting(int,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setRotation(int,boolean,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void dial(java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dumpSenders(java.io.PrintWriter)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$KeyQ: int filterEvent(com.android.server.KeyInputQueue$QueuedEvent)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dumpServices(java.io.PrintWriter)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void installLocationProvider(java.lang.String,android.location.ILocationProvider)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void onChange(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Item: int describeContents()> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityListener: void onProviderDisabled(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int access$1000(com.android.server.WindowManagerService,android.view.MotionEvent)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: int describeContents()> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: int access$202(com.android.server.NotificationManagerService,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: boolean configure(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.UsimPhoneBookManager: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void println(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAnimationScales(float[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataConnectionStateChanged(int,int)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void acquireWakeLockLocked(int,android.os.IBinder,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int addWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnectionFailed(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void sendServiceState(com.android.server.TelephonyRegistry$Record,android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneSubInfoProxy: void setmPhoneSubInfo(com.android.internal.telephony.PhoneSubInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMessageWaiting(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$1602(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int access$1100(com.android.server.WindowManagerService,android.view.KeyEvent,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$4000(com.android.internal.telephony.gsm.GsmDataConnectionTracker)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecord: void setEmails(java.lang.String[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: void stringToGsm8BitUnpackedField(java.lang.String,byte[],int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$000(com.android.server.AlarmManagerService)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSmsOnSim(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)> (SYSTEM_SETTINGS)
<android.media.AudioService: void adjustStreamVolume(int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$100(com.android.server.AlarmManagerService,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deactivateDataCall(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$1400(com.android.server.AlarmManagerService)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void cancelAllNotifications(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: int access$1800(com.android.server.LocationManagerService)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Menu: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)> android.permission.SET_TIME_ZONE (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$3108(com.android.internal.telephony.gsm.GsmDataConnectionTracker)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$3602(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService$5: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (SYSTEM_SETTINGS)
<android.os.ServiceManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService$SettingsObserver: void onChange(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCellLocationChanged(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setCardState(int)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setKeyboardVisibility(boolean)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(com.android.server.AlarmManagerService$Alarm,com.android.server.AlarmManagerService$Alarm)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.CallSetupParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$1202(com.android.server.PowerManagerService,int)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.SimulatedGsmCallState: void setNextDialFailImmediately(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.LaunchBrowserParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: byte[] hexStringToBytes(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setLocationUpdates(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void selectNetworkManually(com.android.internal.telephony.gsm.NetworkInfo,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.RestrictedState: void setCsEmergencyRestricted(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean updateWallpaperOffsetLocked(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSignalStrengthUpdate(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$3702(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToRGB(byte[],int,boolean)> (SYSTEM_SETTINGS)
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int disableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAnimationScale(int,float)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkResponseMessage: void setYesNo(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.TextMessage: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void removeWindowToken(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$1410(com.android.server.AlarmManagerService)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$AppWindowToken: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: void setWallpaperPosition(android.os.IBinder,float,float)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void sendPointerToWallpaperLocked(com.android.server.WindowManagerService$WindowState,android.view.MotionEvent,long)> (SYSTEM_SETTINGS)
<android.server.BluetoothService: void sendUuidIntent(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCLIR(int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void prepareAppTransition(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$3802(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setOnNITZTime(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setAutoBrightness(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: void setRetryCount(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setNextCallFailCause(int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$1700(com.android.server.AlarmManagerService,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityAlert: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int charToGsmExtended(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onDial(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setNumApplications(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$1: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.DisplayTextParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$GservicesChangedReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.Connection: void setUserData(java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyMessageWaitingChanged(boolean)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void writeSmsToRuim(int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkCmdMessage: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DriverCall: int compareTo(java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaBadRemoval(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WifiService: boolean setWifiEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityListener: void onLocationChanged(android.location.Location)> (SYSTEM_SETTINGS)
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onCellLocationChanged(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void invokeOemRilRequestRaw(byte[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.GetInkeyInputResponseData: void format(java.io.ByteArrayOutputStream)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.SimulatedGsmCallState: void setAutoProgressConnectingCall(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.WindowManagerService$WindowState,float,float)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCallRing(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallStateChanged(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$WindowToken: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService valueOf(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.CommandDetails: int describeContents()> (SYSTEM_SETTINGS)
<android.telephony.NeighboringCellInfo: void setCid(int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPin2(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaNoFs(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaRemoved(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaUnmounted(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecord: int describeContents()> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onSignalStrengthsChanged(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$UninstallReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifyDisconnect(com.android.internal.telephony.Connection)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendCdmaSms(byte[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL$1: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void moveAppTokensToTop(java.util.List)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onCallStateChanged(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setUnitTestMode(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$KeyWaiter: void setEventDispatchingLocked(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNewGsmBroadcastSms(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnIccRefresh(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthsChanged(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnStkCallSetUp(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setStayOnSetting(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$4: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: boolean handlePinMmi(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void onMMIDone(com.android.internal.telephony.gsm.GsmMmiCode)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void enableUserActivity(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnUSSD(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService: void bindWallpaperComponentLocked(android.content.ComponentName)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void moveAppTokensToBottom(java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.SelectItemResponseData: void format(java.io.ByteArrayOutputStream)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setInsetsWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.RilMessageDecoder: void sendStartDecodingMessageParams(com.android.internal.telephony.gsm.stk.RilMessage)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean setRotationUncheckedLocked(int,int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void setRepeating(int,long,long,android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.ValueParser: int retrieveItemId(com.android.internal.telephony.gsm.stk.ComprehensionTlv)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void setState(com.android.internal.telephony.DataConnectionTracker$State)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int watchRotation(android.view.IRotationWatcher)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.NeighboringCellInfo: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaShared(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCdmaEriIconMode(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void releaseWakeLock(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.PlayToneParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.ToneSettings: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker$ApnChangeObserver: void onChange(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: int wifiChannelsForMcc(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void onSensorChanged(android.hardware.SensorEvent)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setPokeLock(int,android.os.IBinder,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)> android.permission.MODIFY_PHONE_STATE (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setCdmaSubscriptionAppIndex(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokensLocked(android.content.res.Configuration,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnRestrictedStateChanged(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setPersistent(android.os.IBinder,boolean)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$BrightnessState: boolean setTargetLocked(int,int,int,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void removeContentProvider(android.app.IApplicationThread,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setGsmUmtsSubscriptionAppIndex(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$UpdateRecord: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmConnection: boolean update(com.android.internal.telephony.DriverCall)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onMessageWaitingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setupDefaultPDP(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean compareLoosely(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deleteSmsOnRuim(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(java.lang.CharSequence)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void onAccuracyChanged(android.hardware.Sensor,int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean hasKeys(int[],boolean[])> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setIsManualSelection(boolean)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaMounted(java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnUnsolOemHookRaw(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void addWindowToken(android.os.IBinder,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: int access$200(java.io.InputStream,byte[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3608(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)> (SYSTEM_SETTINGS)
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendUSSD(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: int cdmaBcdByteToInt(byte)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnStkProactiveCmd(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$SettingsObserver: void update(java.util.Observable,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)> (SYSTEM_SETTINGS)
<android.telephony.SignalStrength: android.telephony.SignalStrength newFromBundle(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyMessageWaitingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.BatteryStatsService: void setOnBattery(boolean,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNewSMS(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$AppWindowToken: void setAnimation(android.view.animation.Animation)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$BrightnessState: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setInTouchMode(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendDtmf(char,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCdmaEriIconIndex(int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$2900(com.android.internal.telephony.gsm.GsmDataConnectionTracker)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSystemLocale(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchCount(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deleteSmsOnSim(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int access$1200(com.android.server.WindowManagerService,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.RestrictedState: void setCsNormalRestricted(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.AppWidgetService: void deleteAppWidgetLocked(com.android.server.AppWidgetService$AppWidgetId)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void remove(android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityListener: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.WindowManagerService$AppWindowToken,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: int disableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<android.os.ServiceManager: void initServiceCache(java.util.Map)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$1800(com.android.server.PowerManagerService)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3500(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onDataConnectionStateChanged(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Duration: int describeContents()> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendSMS(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnStkSessionEnd(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceState(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallState(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$WindowState: void setAnimation(android.view.animation.Animation)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<android.media.AudioService: void access$200(android.os.Handler,int,int,int,int,int,java.lang.Object,int)> (SYSTEM_SETTINGS)
<android.media.AudioService: void playSoundEffect(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.WindowManagerService$AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallForwardingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaChecking(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAppGroupId(android.os.IBinder,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DriverCall: int presentationFromCLIP(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void removeAppToken(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean injectKeyEvent(android.view.KeyEvent,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SIMRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)> android.permission.WRITE_SETTINGS (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$3400(com.android.server.PowerManagerService,boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$LocationWorkerHandler: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void startDtmf(char,android.os.Message)> (SYSTEM_SETTINGS)
<android.server.BluetoothA2dpService$1: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: void setTransparentRegion(android.view.IWindow,android.graphics.Region)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void updateMessageWaitingIndicator(int)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void userActivity(long,boolean,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.NetworkInfo: int describeContents()> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setPhoneType(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.CommandParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Item: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void performReceive(com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: void dumpStartList(java.io.PrintWriter,java.lang.String,java.util.List,long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCard: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnStkEvent(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.MountService: void notifyMediaEject(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCssIndicator(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkResponseMessage: void setInput(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void startDtmf(char)> (SYSTEM_SETTINGS)
<android.media.AudioService: void playSoundEffectVolume(int,float)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String formatDialString(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void access$1400(com.android.server.WindowManagerService,com.android.server.WindowManagerService$Session,android.view.IWindow,android.graphics.Region)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$300(com.android.server.PowerManagerService)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setEventDispatching(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkService: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$1102(com.android.server.PowerManagerService,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean startViewServer(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendTerminalResponse(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService$1: void onSetDisabled(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaBroadcastConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService$WallpaperConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: int access$1802(com.android.server.LocationManagerService,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: boolean configure(int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkResponseMessage: void setResultCode(com.android.internal.telephony.gsm.stk.ResultCode)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService$WallpaperConnection: void onServiceDisconnected(android.content.ComponentName)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void cancelToast(java.lang.String,android.app.ITransientNotification)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setSuppServiceNotifications(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.WindowManagerService)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SIMRecords: void setVoiceCallForwardingFlag(int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: int disableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void reenableKeyguard(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(java.lang.Object,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService$2: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void requestAnimationLocked(long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void sendUnsolicited(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.app.ActivityManager$RunningServiceInfo: int describeContents()> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: int access$1408(com.android.server.AlarmManagerService)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void access$3200(com.android.server.PowerManagerService,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setNextDialFailImmediately(boolean)> (SYSTEM_SETTINGS)
<android.media.AudioService: void setStreamVolume(int,int,int)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onDataActivity(int)> (SYSTEM_SETTINGS)
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$2700(com.android.internal.telephony.gsm.GsmDataConnectionTracker)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean injectTrackballEvent(android.view.MotionEvent,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void removeGpsStatusListener(android.location.IGpsStatusListener)> (SYSTEM_SETTINGS)
<com.android.server.WallpaperManagerService: void setDimensionHints(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: int gsmBcdByteToInt(byte)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setPreferredVoicePrivacy(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: int hexCharToInt(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: boolean setDataEnabled(boolean)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setState(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int findDesiredInputMethodWindowIndexLocked(boolean)> (SYSTEM_SETTINGS)
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void separateConnection(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.Input: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setBacklightBrightness(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: void setInTouchMode(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(com.android.internal.telephony.PhoneBase,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void removeWindow(com.android.server.WindowManagerService$Session,android.view.IWindow)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: int apnTypeToId(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSmsStatus(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void hangupConnection(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchTime(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: int relayoutWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setRoaming(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void closeSystemDialogs(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$Session: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService$WindowState: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkResponseMessage: void setConfirmation(boolean)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void access$2100(com.android.server.PowerManagerService,long,int)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void cancelNotificationWithTag(java.lang.String,java.lang.String,int)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCdmaEriText(java.lang.String)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccUtils: java.lang.String networkNameToString(byte[],int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthChanged(int)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void print(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyMessageWaitingChanged(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$4002(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setMute(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallForwardingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void set(int,long,android.app.PendingIntent)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$1: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<android.server.BluetoothService$BondState: void setBondState(java.lang.String,int,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendEnvelope(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService$ProximityListener: void onProviderEnabled(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$4102(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService$1: void onNotificationClick(java.lang.String,java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.Call: void setGeneric(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: boolean injectPointerEvent(android.view.MotionEvent,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(java.lang.CharSequence,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: int access$200(com.android.server.NotificationManagerService)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void setCellBroadcastConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.NotificationManagerService: void cancelNotification(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)> (SYSTEM_SETTINGS)
<com.android.server.am.PendingIntentRecord: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendCDMAFeatureCode(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.SignalStrength: int describeContents()> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void access$1900(com.android.server.PowerManagerService,int)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setRadioTechnology(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setAutoProgressConnectingCall(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: int convertCallState(com.android.internal.telephony.Phone$State)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: android.telephony.ServiceState newFromBundle(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: int access$2000(com.android.server.PowerManagerService)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService$3: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokensUnchecked(android.content.res.Configuration,android.os.IBinder)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$4300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)> (SYSTEM_SETTINGS)
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3702(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadio(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void acquireWakeLock(int,android.os.IBinder,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.stk.StkService: void onCmdResponse(com.android.internal.telephony.gsm.stk.StkResponseMessage)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker$1: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.server.PowerManagerService: void setPolicy(android.view.WindowManagerPolicy)> (SYSTEM_SETTINGS)
<android.telephony.PhoneStateListener$1: void onSignalStrengthChanged(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceInPackage(int,android.content.Intent,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.LocationManagerService: void reportLocation(android.location.Location)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
